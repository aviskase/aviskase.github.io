<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>it on aviskase</title><link>https://www.aviskase.com/categories/it/</link><description>Recent content in it on aviskase</description><generator>Hugo</generator><language>en</language><lastBuildDate>Wed, 27 Nov 2024 23:30:28 -0500</lastBuildDate><atom:link href="https://www.aviskase.com/categories/it/index.xml" rel="self" type="application/rss+xml"/><item><title>The second (and probably last this year) progress report on cyber learning</title><link>https://www.aviskase.com/articles/2024/11/27/the-second-and-probably-last-this-year-progress-report-on-cyber-learning/</link><pubDate>Wed, 27 Nov 2024 23:30:28 -0500</pubDate><guid>https://www.aviskase.com/articles/2024/11/27/the-second-and-probably-last-this-year-progress-report-on-cyber-learning/</guid><description>&lt;p>As I&amp;rsquo;m approching my due date (literally today), here is what I&amp;rsquo;ve done so far:&lt;/p>
&lt;p>Done:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://tryhackme-certificates.s3-eu-west-1.amazonaws.com/THM-FO0RKYGLWJ.pdf" class="external-link">TryHackMe: Jr Penetration Tester learning path&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://tryhackme-certificates.s3-eu-west-1.amazonaws.com/THM-RCUOTDRZ2Y.pdf" class="external-link">TryHackMe: Web Fundamentals learning path&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>In progress:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://overthewire.org/wargames/natas/" class="external-link">OverTheWire wargame: Natas&lt;/a> (it was put on hold until finishing those first THM learning paths)&lt;/li>
&lt;li>HackTheBox: Lab &amp;amp; Academy introductory stuff&lt;/li>
&lt;li>&lt;a href="https://cybersecurity.bsy.fel.cvut.cz/docs/about/" class="external-link">CTU MOOC Introduction to security&lt;/a>&lt;/li>
&lt;li>TryHackMe: Web Application Pentesting (probably won&amp;rsquo;t finish this year)&lt;/li>
&lt;/ul>
&lt;p>So, I mostly worked on TryHackMe stuff. I did some HTB things, but THM courses seem to be more to the point and less buggy. Also, the pet peeve of mine: HTB requires you to click on &amp;ldquo;Submit&amp;rdquo; button, pressing &lt;span class="kbd">&lt;kbd>Enter&lt;/kbd>&lt;/span>
 is not enough, bleh.&lt;/p></description></item><item><title>Switching to cyber</title><link>https://www.aviskase.com/articles/2024/11/07/switching-to-cyber/</link><pubDate>Thu, 07 Nov 2024 23:52:06 -0500</pubDate><guid>https://www.aviskase.com/articles/2024/11/07/switching-to-cyber/</guid><description>&lt;p>I don&amp;rsquo;t think pivoting to another career path less than a month before maternity leave is a normal (and smart) thing to do, but here we are.&lt;/p>
&lt;p>Finished:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://overthewire.org/wargames/bandit/" class="external-link">OverTheWire wargame: Bandit&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://tryhackme-certificates.s3-eu-west-1.amazonaws.com/THM-AKHBGNGXH6.png" class="external-link">TryHackMe: Cyber Security 101 learning path&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>In progress:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://overthewire.org/wargames/natas/" class="external-link">OverTheWire wargame: Natas&lt;/a>&lt;/li>
&lt;li>TryHackMe: Jr Penetration Tester learning path&lt;/li>
&lt;li>HackTheBox: Lab &amp;amp; Academy introductory stuff&lt;/li>
&lt;li>&lt;a href="https://cybersecurity.bsy.fel.cvut.cz/docs/about/" class="external-link">CTU MOOC Introduction to security&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>&amp;hellip; and joined &lt;a href="https://hackfest.ca/" class="external-link">Hackfest&lt;/a> discord (local community).&lt;/p></description></item><item><title>Goodbye, `og:image`</title><link>https://www.aviskase.com/articles/2024/03/16/goodbye-ogimage/</link><pubDate>Sat, 16 Mar 2024 14:35:00 +0000</pubDate><guid>https://www.aviskase.com/articles/2024/03/16/goodbye-ogimage/</guid><description>&lt;p>When you see a link on almost all social platforms or messengers, you usually see a card preview with a title, an almost invisible summary, and an image. These cards are generated based on twitter and Open Graph HTML tags that look something like this:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#cdd6f4;background-color:#1e1e2e;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-html" data-lang="html">&lt;span style="display:flex;">&lt;span>&amp;lt;&lt;span style="color:#cba6f7">meta&lt;/span> &lt;span style="color:#89b4fa">property&lt;/span>&lt;span style="color:#89dceb;font-weight:bold">=&lt;/span>&lt;span style="color:#a6e3a1">&amp;#34;og:url&amp;#34;&lt;/span> &lt;span style="color:#89b4fa">content&lt;/span>&lt;span style="color:#89dceb;font-weight:bold">=&lt;/span>&lt;span style="color:#a6e3a1">&amp;#34;&amp;lt;url&amp;gt;&amp;#34;&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;&lt;span style="color:#cba6f7">meta&lt;/span> &lt;span style="color:#89b4fa">property&lt;/span>&lt;span style="color:#89dceb;font-weight:bold">=&lt;/span>&lt;span style="color:#a6e3a1">&amp;#34;og:title&amp;#34;&lt;/span> &lt;span style="color:#89b4fa">content&lt;/span>&lt;span style="color:#89dceb;font-weight:bold">=&lt;/span>&lt;span style="color:#a6e3a1">&amp;#34;&amp;lt;title&amp;gt;&amp;#34;&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;&lt;span style="color:#cba6f7">meta&lt;/span> &lt;span style="color:#89b4fa">property&lt;/span>&lt;span style="color:#89dceb;font-weight:bold">=&lt;/span>&lt;span style="color:#a6e3a1">&amp;#34;og:description&amp;#34;&lt;/span> &lt;span style="color:#89b4fa">content&lt;/span>&lt;span style="color:#89dceb;font-weight:bold">=&lt;/span>&lt;span style="color:#a6e3a1">&amp;#34;&amp;lt;description&amp;gt;&amp;#34;&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;&lt;span style="color:#cba6f7">meta&lt;/span> &lt;span style="color:#89b4fa">property&lt;/span>&lt;span style="color:#89dceb;font-weight:bold">=&lt;/span>&lt;span style="color:#a6e3a1">&amp;#34;og:image&amp;#34;&lt;/span> &lt;span style="color:#89b4fa">content&lt;/span>&lt;span style="color:#89dceb;font-weight:bold">=&lt;/span>&lt;span style="color:#a6e3a1">&amp;#34;&amp;lt;link&amp;gt;&amp;#34;&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;&lt;span style="color:#cba6f7">meta&lt;/span> &lt;span style="color:#89b4fa">name&lt;/span>&lt;span style="color:#89dceb;font-weight:bold">=&lt;/span>&lt;span style="color:#a6e3a1">&amp;#34;twitter:card&amp;#34;&lt;/span> &lt;span style="color:#89b4fa">content&lt;/span>&lt;span style="color:#89dceb;font-weight:bold">=&lt;/span>&lt;span style="color:#a6e3a1">&amp;#34;summary_large_image&amp;#34;&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;&lt;span style="color:#cba6f7">meta&lt;/span> &lt;span style="color:#89b4fa">property&lt;/span>&lt;span style="color:#89dceb;font-weight:bold">=&lt;/span>&lt;span style="color:#a6e3a1">&amp;#34;twitter:url&amp;#34;&lt;/span> &lt;span style="color:#89b4fa">content&lt;/span>&lt;span style="color:#89dceb;font-weight:bold">=&lt;/span>&lt;span style="color:#a6e3a1">&amp;#34;&amp;lt;url&amp;gt;&amp;#34;&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;&lt;span style="color:#cba6f7">meta&lt;/span> &lt;span style="color:#89b4fa">name&lt;/span>&lt;span style="color:#89dceb;font-weight:bold">=&lt;/span>&lt;span style="color:#a6e3a1">&amp;#34;twitter:title&amp;#34;&lt;/span> &lt;span style="color:#89b4fa">content&lt;/span>&lt;span style="color:#89dceb;font-weight:bold">=&lt;/span>&lt;span style="color:#a6e3a1">&amp;#34;&amp;lt;title&amp;gt;&amp;#34;&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;&lt;span style="color:#cba6f7">meta&lt;/span> &lt;span style="color:#89b4fa">name&lt;/span>&lt;span style="color:#89dceb;font-weight:bold">=&lt;/span>&lt;span style="color:#a6e3a1">&amp;#34;twitter:description&amp;#34;&lt;/span> &lt;span style="color:#89b4fa">content&lt;/span>&lt;span style="color:#89dceb;font-weight:bold">=&lt;/span>&lt;span style="color:#a6e3a1">&amp;#34;&amp;lt;description&amp;gt;&amp;#34;&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;&lt;span style="color:#cba6f7">meta&lt;/span> &lt;span style="color:#89b4fa">name&lt;/span>&lt;span style="color:#89dceb;font-weight:bold">=&lt;/span>&lt;span style="color:#a6e3a1">&amp;#34;twitter:image&amp;#34;&lt;/span> &lt;span style="color:#89b4fa">content&lt;/span>&lt;span style="color:#89dceb;font-weight:bold">=&lt;/span>&lt;span style="color:#a6e3a1">&amp;#34;&amp;lt;link&amp;gt;&amp;#34;&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>See those image properties? Per specifications they are &lt;strong>required&lt;/strong>. The minimum size is 200×200 pixels; the recommended size is 1200×630 pixels.&lt;/p></description></item><item><title>Open Banking: Canada vs Kazakhstan</title><link>https://www.aviskase.com/articles/2024/01/25/open-banking-canada-vs-kazakhstan/</link><pubDate>Thu, 25 Jan 2024 23:59:46 -0500</pubDate><guid>https://www.aviskase.com/articles/2024/01/25/open-banking-canada-vs-kazakhstan/</guid><description>&lt;p>As I was skimming through &lt;a href="https://apichangelog.substack.com/p/2024-04" class="external-link">The API Changelog issue 2024.04&lt;/a>, my eye caught:&lt;/p>
&lt;blockquote>
&lt;p>Kazakhstan&amp;rsquo;s National Bank and other entities &lt;a href="https://astanatimes.com/2024/01/kazakhstan-joins-open-banking-countries-produces-initial-results/" class="external-link">published&lt;/a> a report on an Open API and Open Banking pilot, aiming to modernize financial services through standardized data exchange. The successful pilot involved multiple banks and clients, setting the stage for a transparent and competitive financial sector by 2024.&lt;/p></description></item><item><title>The Navy's IT challenges</title><link>https://www.aviskase.com/articles/2023/12/15/the-navys-it-challenges/</link><pubDate>Fri, 15 Dec 2023 00:10:48 -0500</pubDate><guid>https://www.aviskase.com/articles/2023/12/15/the-navys-it-challenges/</guid><description>&lt;p>Can&amp;rsquo;t stop thinking about one line from the recent &lt;a href="https://paulwells.substack.com/p/a-generational-challenge-in-naval" class="external-link">Paul Well&amp;rsquo;s interview with Vice Admiral Angus Topshee&lt;/a>, the Commander of the Royal Canadian Navy.&lt;/p>
&lt;blockquote>
&lt;p>PW: Is the fact that this video’s on YouTube a reflection of any difficulty you&amp;rsquo;re having getting heard internally?&lt;/p>
&lt;p>AT: No. I&amp;rsquo;ve shared my assessments with the leadership of the Department, up to and including this minister and the previous Minister. I feel I&amp;rsquo;m being heard and respected. This was more about, we wanted to put the message out internally. Unfortunately, there&amp;rsquo;s some very specific IT challenges around how we disseminate internal messages. And so [Youtube] was the channel we used.&lt;/p></description></item><item><title>Using `openapi-cli`: custom rules</title><link>https://www.aviskase.com/articles/2021/09/06/using-openapi-cli-custom-rules/</link><pubDate>Mon, 06 Sep 2021 16:35:43 -0400</pubDate><guid>https://www.aviskase.com/articles/2021/09/06/using-openapi-cli-custom-rules/</guid><description>&lt;p>If you&amp;rsquo;re planning to &lt;a href="https://www.aviskase.com/articles/2020/12/07/crash-course-into-api-related-terminology/#description-doc-validation-vs-linting-vs-preprocessing" class="internal-link">lint OpenAPI description documents&lt;/a> (you should!), always check whether a linter supports adding custom rules. And I mean not just &lt;a href="https://www.aviskase.com/articles/2019/12/26/lunchlearn-linting-openapi-description-docs/" class="internal-link">changing severity or disabling predefined rules&lt;/a>, but actually adding new ones specific to your API standards.&lt;/p>
&lt;p>&lt;code>openapi-cli&lt;/code>, as any respectable OpenAPI linter, &lt;a href="https://redoc.ly/docs/cli/custom-rules/" class="external-link">allows that&lt;/a>. The process is very similar to &lt;a href="https://www.aviskase.com/articles/2021/08/16/using-openapi-cli-custom-preprocessing/" class="internal-link">adding preprocessors&lt;/a>.&lt;/p></description></item><item><title>Using `openapi-cli`: custom preprocessing</title><link>https://www.aviskase.com/articles/2021/08/16/using-openapi-cli-custom-preprocessing/</link><pubDate>Mon, 16 Aug 2021 23:44:37 -0400</pubDate><guid>https://www.aviskase.com/articles/2021/08/16/using-openapi-cli-custom-preprocessing/</guid><description>&lt;p>The key feature of &lt;code>openapi-cli&lt;/code> is its extensibility. There are three ways to extend it: &lt;a href="https://redoc.ly/docs/cli/custom-rules/" class="external-link">preprocessors, rules, and decorators&lt;/a>. In comparison, &lt;a href="https://meta.stoplight.io/docs/spectral" class="external-link">Spectral&lt;/a> supports only custom rules.&lt;/p>
&lt;p>In this tutorial, we&amp;rsquo;ll start with &lt;strong>preprocessors&lt;/strong>. They are used to transform OpenAPI description document &lt;em>before&lt;/em> validation and linting. Mind you, documentation says they should be avoided, because custom preprocessors tend to be error prone.&lt;/p></description></item><item><title>Using `openapi-cli` during API design: part two</title><link>https://www.aviskase.com/articles/2021/03/23/using-openapi-cli-during-api-design-part-two/</link><pubDate>Tue, 23 Mar 2021 00:30:57 -0400</pubDate><guid>https://www.aviskase.com/articles/2021/03/23/using-openapi-cli-during-api-design-part-two/</guid><description>&lt;p>&lt;a href="https://www.aviskase.com/articles/2021/01/31/using-openapi-cli-during-api-design-part-one/" class="internal-link">Part one&lt;/a> showed the basics of using &lt;code>openapi-cli&lt;/code> for a single-definition project. Let&amp;rsquo;s see how it works for multi-definition projects.&lt;/p>
&lt;h2 id="multi-what" >
 &lt;a href="#multi-what">Multi-what?&lt;/a>
&lt;/h2>
&lt;p>By multi-definition project I mean a project with several OpenAPI description documents. For example, it can be useful if you want to keep contracts for all services in one place. Then, you can reuse common schemas between definitions.&lt;/p></description></item><item><title>Using `openapi-cli` for API exploration</title><link>https://www.aviskase.com/articles/2021/01/10/using-openapi-cli-for-api-exploration/</link><pubDate>Sun, 10 Jan 2021 14:28:31 -0500</pubDate><guid>https://www.aviskase.com/articles/2021/01/10/using-openapi-cli-for-api-exploration/</guid><description>&lt;p>&lt;a href="https://www.aviskase.com/articles/2020/12/20/using-openapi-cli-intro/" class="internal-link">As promised&lt;/a>, let&amp;rsquo;s dive into the usage of &lt;code>openapi-cli&lt;/code>. The first topic is semi-non-technical: API exploration. You might be interested if:&lt;/p>
&lt;ul>
&lt;li>you&amp;rsquo;re a tech writer&lt;/li>
&lt;li>you&amp;rsquo;re a tester&lt;/li>
&lt;li>you don&amp;rsquo;t know what the heck API exploration is&lt;/li>
&lt;/ul>
&lt;h2 id="what-is-api-exploration" >
 &lt;a href="#what-is-api-exploration">What is API exploration&lt;/a>
&lt;/h2>
&lt;p>I use this term akin to &lt;em>exploratory testing&lt;/em>. You can search for works of Cem Kaner, James Bach, Michael Bolton, Elisabeth Hendrickson, James Whittaker, but beware, that&amp;rsquo;s a nice little serpentarium of a field.&lt;/p></description></item><item><title>Hmms: 2020</title><link>https://www.aviskase.com/articles/2020/12/30/hmms-2020/</link><pubDate>Wed, 30 Dec 2020 09:35:16 -0500</pubDate><guid>https://www.aviskase.com/articles/2020/12/30/hmms-2020/</guid><description>&lt;p>Usually it&amp;rsquo;s monthly collection of things that got me &lt;del>thinking&lt;/del> hmming. But this is the end of the year, let&amp;rsquo;s do a little retrospective.&lt;/p>
&lt;h2 id="retro" >
 &lt;a href="#retro">Retro&lt;/a>
&lt;/h2>
&lt;p>What happened this year:&lt;/p>
&lt;ul>
&lt;li>My title switched &lt;a href="https://www.aviskase.com/articles/2020/08/04/hmms-july/#no-longer-a-tester" class="internal-link">from &amp;ldquo;tester&amp;rdquo; to &amp;ldquo;engineer&amp;rdquo;&lt;/a>. Yay?&lt;/li>
&lt;li>&lt;a href="https://www.aviskase.com/articles/2020/09/15/conference-notes-asc-2020/" class="internal-link">Had a great time at ASC 2020 conference&lt;/a>. Yes, it&amp;rsquo;s not my first conference, but this one left a good long-lasting aftertaste.&lt;/li>
&lt;li>I ported blog &lt;a href="https://www.aviskase.com/articles/2020/10/04/from-pelican-to-hugo/" class="internal-link">from pelican to hugo&lt;/a> and &lt;a href="https://www.aviskase.com/articles/2020/10/18/blog-redesign-phase-1/" class="internal-link">started a redesign&lt;/a>. Still much to do and polish, but at least the base is sound.&lt;/li>
&lt;li>&lt;a href="https://www.aviskase.com/articles/2020/07/03/knowledge-management-tools/" class="internal-link">Joined Obsidian community&lt;/a>.&lt;/li>
&lt;li>As a consequence, I &lt;strong>unwillingly&lt;/strong> created &lt;a href="https://www.aviskase.com/articles/2020/11/03/hmms-october/#hi-youtube" class="internal-link">a YouTube channel in Russian&lt;/a>. It&amp;rsquo;s cool to learn new skills (audio cleaning, video editing), but to be honest, content creation in Russian isn&amp;rsquo;t exactly a lucrative or professionally valuable hobby. Still, I cannot say no to people asking to teach or explain something: knowledge sharing is one of the biggest values to me.&lt;/li>
&lt;li>Finished Finnish tree on Duolingo. Don&amp;rsquo;t ask why, I, person living in Quebec, learn Finnish. I just want to! &lt;em>Se on täydellinen kieli&lt;/em>.&lt;/li>
&lt;/ul>
&lt;p>What didn&amp;rsquo;t happen:&lt;/p></description></item><item><title>Using `openapi-cli`: intro</title><link>https://www.aviskase.com/articles/2020/12/20/using-openapi-cli-intro/</link><pubDate>Sun, 20 Dec 2020 22:26:21 -0500</pubDate><guid>https://www.aviskase.com/articles/2020/12/20/using-openapi-cli-intro/</guid><description>&lt;p>Before we jump into the usage of this mysterious tool with way too generic name, let me give you an introduction.&lt;/p>
&lt;p>There are many tools for supporting API design via OpenAPI description documents. You can check &lt;a href="https://openapi.tools/" class="external-link">the list here&lt;/a>.&lt;/p>
&lt;p>The most common tasks are:&lt;/p>
&lt;ul>
&lt;li>dereferencing&lt;/li>
&lt;li>linting&lt;/li>
&lt;li>reference documentation preview and/or generation&lt;/li>
&lt;/ul>
&lt;p>I talked about dereferencing &lt;a href="https://www.aviskase.com/articles/2020/12/07/crash-course-into-api-related-terminology/#ref" class="internal-link">not long ago&lt;/a>. In short, it&amp;rsquo;s needed to produce a final OpenAPI description doc from more DRY and granular schemas. You can &lt;a href="https://stoplight.io/blog/keeping-openapi-dry-and-portable/" class="external-link">read more about the process here&lt;/a>. One of the tools that can help you is &lt;a href="https://github.com/APIDevTools/json-schema-ref-parser" class="external-link">&lt;code>json-schema-ref-parser&lt;/code>&lt;/a>.&lt;/p></description></item><item><title>Crash course into API-related terminology</title><link>https://www.aviskase.com/articles/2020/12/07/crash-course-into-api-related-terminology/</link><pubDate>Mon, 07 Dec 2020 20:59:28 -0500</pubDate><guid>https://www.aviskase.com/articles/2020/12/07/crash-course-into-api-related-terminology/</guid><description>&lt;p>Anyone trying to dive into the world of APIs is doomed to be confused by conflicting terminology. In this post I&amp;rsquo;m gonna touch upon the main definitions and processes. I already tried it once during &lt;a href="https://www.aviskase.com/articles/2020/03/08/hmms-february/" class="internal-link">lunch&amp;amp;learn session at work&lt;/a>, but the time has come to revisit &lt;a href="https://github.com/aviskase/trucs/blob/master/api_salad.pdf" class="external-link">that old presentation&lt;/a> in the written form.&lt;/p></description></item><item><title>Hmms: November</title><link>https://www.aviskase.com/articles/2020/11/30/hmms-november/</link><pubDate>Mon, 30 Nov 2020 18:35:10 -0500</pubDate><guid>https://www.aviskase.com/articles/2020/11/30/hmms-november/</guid><description>&lt;p>Monthly collection of things that got me &lt;del>thinking&lt;/del> hmming.&lt;/p>
&lt;h2 id="awards-and-reports" >
 &lt;a href="#awards-and-reports">Awards and reports&lt;/a>
&lt;/h2>
&lt;p>Time for &lt;a href="https://www.thoughtworks.com/radar" class="external-link">ThoughtWorks Technology Radar&lt;/a>. One of the themes is democratizing programming which is tightly coupled with &lt;a href="https://www.aviskase.com/articles/2020/11/03/hmms-october/" class="internal-link">democratization of APIs I mentioned in the last hmms&lt;/a>.&lt;/p>
&lt;p>&lt;a href="https://puppet.com/resources/report/2020-state-of-devops-report/" class="external-link">The 2020 state of DevOps report&lt;/a> is there! I haven&amp;rsquo;t even read it yet =)&lt;/p></description></item><item><title>Hmms: October</title><link>https://www.aviskase.com/articles/2020/11/03/hmms-october/</link><pubDate>Tue, 03 Nov 2020 22:33:09 -0500</pubDate><guid>https://www.aviskase.com/articles/2020/11/03/hmms-october/</guid><description>&lt;p>Monthly collection of things that got me &lt;del>thinking&lt;/del> &lt;em>hmming&lt;/em>.&lt;/p>
&lt;h2 id="links-lunch" >
 &lt;a href="#links-lunch">Links lunch&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>I was reading &lt;a href="https://martinfowler.com/articles/branching-patterns.html" class="external-link">&amp;ldquo;Patterns for Managing Source Code Branches&amp;rdquo;&lt;/a> (which in itself is a great piece) when I saw
&lt;a href="https://www.mediawiki.org/wiki/GitLab_consultation#Outcome" class="external-link">MediaWiki&amp;rsquo;s discussion about moving to GitLab&lt;/a>. Guess what, they used Fowler&amp;rsquo;s article as a basis for definitions in the discussion. It&amp;rsquo;s curious how some persons&amp;rsquo; outputs instantly become almost a &amp;ldquo;standard.&amp;rdquo;&lt;/p></description></item><item><title>Automap API operation handlers in components-based project</title><link>https://www.aviskase.com/articles/2020/10/25/automap-api-operation-handlers-in-components-based-project/</link><pubDate>Sun, 25 Oct 2020 22:05:10 -0400</pubDate><guid>https://www.aviskase.com/articles/2020/10/25/automap-api-operation-handlers-in-components-based-project/</guid><description>&lt;p>&lt;a href="https://github.com/goldbergyoni/nodebestpractices" class="external-link">Node.js best practices repo&lt;/a> is the most comprehensive list of style guides and architectural tips for Node.js apps I&amp;rsquo;ve seen. The very first of them is about &lt;a href="https://github.com/goldbergyoni/nodebestpractices/blob/master/sections/projectstructre/breakintcomponents.md" class="external-link">structuring projects based on components instead of layers&lt;/a>.&lt;/p>
&lt;p>For example, the typical layers-based layout would be:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#cdd6f4;background-color:#1e1e2e;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span>.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>├── common
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│   └── utils.ts
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>├── routers
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│   ├── locations.router.ts
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│   └── users.router.ts
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>├── services
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│   ├── locations.service.ts
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│   └── users.service.ts
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>└── index.ts
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>In comparison, this is a components-based layout:&lt;/p></description></item><item><title>Conference notes: ASC 2020</title><link>https://www.aviskase.com/articles/2020/09/15/conference-notes-asc-2020/</link><pubDate>Tue, 15 Sep 2020 23:15:49 +0000</pubDate><guid>https://www.aviskase.com/articles/2020/09/15/conference-notes-asc-2020/</guid><description>&lt;p>&lt;a href="https://www.openapis.org/" class="external-link">OpenAPI Initiative&amp;rsquo;s&lt;/a> &lt;a href="https://events.linuxfoundation.org/openapi-asc/" class="external-link">API specifications conference (ASC)&lt;/a> was the first payed event I&amp;rsquo;ve attended. Usually I watch free online events or past videos available on YouTube or Vimeo, but this time I decided to bite my inner Scrooge McDuck since there were relevant topics and price was reasonable.&lt;/p>
&lt;p>And I didn&amp;rsquo;t regret it! I would love to attend offline or online future event: community is golden. There were tons of activity and discussions. The obvious example was day two keynote where the discussion in the chat was almost (if not more) as active as the streamed panel discussion.&lt;/p></description></item><item><title>Hmms: August</title><link>https://www.aviskase.com/articles/2020/09/01/hmms-august/</link><pubDate>Tue, 01 Sep 2020 00:33:03 +0000</pubDate><guid>https://www.aviskase.com/articles/2020/09/01/hmms-august/</guid><description>&lt;p>This month&amp;rsquo;s hmms were supposed to be easy peasy to do: just grab all new notes created in Obsidian, curate a bit, and, voilà, done. I even wrote &lt;a href="https://pypi.org/project/obsidian-progress-report/" class="external-link">a small python tool&lt;/a>.&lt;/p>
&lt;p>Yeah, right. I keep forgetting that it&amp;rsquo;s almost impossible to get file&amp;rsquo;s &lt;em>creation date&lt;/em> on Linux. There is &lt;a href="https://unix.stackexchange.com/a/131347" class="external-link">a hacky way&lt;/a> for ext4, but in my case it didn&amp;rsquo;t work: according to the script, almost all notes were created on Aug 18 o_O. Ok, lesson learned, now my notes will have yaml front matter with creation date =(&lt;/p></description></item><item><title>Remembering JavaScript and TypeScript</title><link>https://www.aviskase.com/articles/2020/08/30/remembering-javascript-and-typescript/</link><pubDate>Sun, 30 Aug 2020 20:46:02 +0000</pubDate><guid>https://www.aviskase.com/articles/2020/08/30/remembering-javascript-and-typescript/</guid><description>&lt;p>Until recently, I had been coding mostly in Python. I&amp;rsquo;m not an expert, but have a fair understanding of PEPs and practices.&lt;/p>
&lt;p>But now I work with JavaScript/TypeScript project, and my knowledge is definitely lacking. I was following these only in the university, when there was still a chance that I had to do web development. I distinctly remember the moment of downloading &lt;a href="https://github.com/getify/You-Dont-Know-JS/blob/1st-ed/this%20&amp;amp;%20object%20prototypes/README.md#you-dont-know-js-this--object-prototypes" class="external-link">&amp;ldquo;You Don&amp;rsquo;t Know JS: this &amp;amp; Object Prototypes&amp;rdquo;&lt;/a> book and thinking &amp;ldquo;nope, that&amp;rsquo;s it, I don&amp;rsquo;t want to deal with such language.&amp;rdquo;&lt;/p></description></item><item><title>Postmortem: borking Ubuntu (again)</title><link>https://www.aviskase.com/articles/2020/08/20/postmortem-borking-ubuntu-again/</link><pubDate>Thu, 20 Aug 2020 22:41:32 +0000</pubDate><guid>https://www.aviskase.com/articles/2020/08/20/postmortem-borking-ubuntu-again/</guid><description>&lt;p>Since I had to deal with an incident recovery this week, I thought why not use it for practicing writing postmortems?&lt;/p>
&lt;p>Postmortem is an excellent way to reflect and learn from disasters. Check &lt;a href="https://landing.google.com/sre/sre-book/chapters/postmortem-culture/" class="external-link">Google&amp;rsquo;s SRE book&lt;/a> for more information.&lt;/p>
&lt;p>So, let&amp;rsquo;s begin.&lt;/p>
&lt;p>&lt;strong>Summary.&lt;/strong> On Tuesday at roughly 02:30 I wasn&amp;rsquo;t able to log into Ubuntu: GNOME crashed before being able to display login screen.&lt;/p></description></item><item><title>Be chicken!</title><link>https://www.aviskase.com/articles/2020/08/08/be-chicken/</link><pubDate>Sat, 08 Aug 2020 23:42:54 +0000</pubDate><guid>https://www.aviskase.com/articles/2020/08/08/be-chicken/</guid><description>&lt;p>&lt;a href="https://www.apiscene.io/lifecycle/changing-culture-how-committed-are-you/" class="external-link">The article on API change culture&lt;/a> uses a well-known &amp;ldquo;the chicken and the pig&amp;rdquo; fable as an inspiration:&lt;/p>
&lt;blockquote>
&lt;p>A Pig and a Chicken are walking down the road.&lt;/p>
&lt;p>The Chicken says: &amp;ldquo;Hey Pig, I was thinking we should open a restaurant!&amp;rdquo;&lt;/p>
&lt;p>Pig replies: &amp;ldquo;Hm, maybe, what would we call it?&amp;rdquo;&lt;/p></description></item><item><title>Hmms: July</title><link>https://www.aviskase.com/articles/2020/08/04/hmms-july/</link><pubDate>Tue, 04 Aug 2020 22:26:40 +0000</pubDate><guid>https://www.aviskase.com/articles/2020/08/04/hmms-july/</guid><description>&lt;h2 id="oops-i-have-nothing-to-share" >
 &lt;a href="#oops-i-have-nothing-to-share">Oops, I have nothing to share&lt;/a>
&lt;/h2>
&lt;p>Since &lt;a href="https://www.aviskase.com/articles/2020/07/03/knowledge-management-tools/" class="internal-link">migrating to Obsidian&lt;/a> for knowledge management, I&amp;rsquo;ve lost a track of interesting resources I read, because they are represented as atomic cross-referencing notes.&lt;/p>
&lt;p>Perhaps I should try to be more consistent and always write &lt;a href="https://www.lesswrong.com/posts/T382CLwAjsy3fmecf/how-to-take-smart-notes-ahrens-2017" class="external-link">literature notes&lt;/a>. Alas, my current graph looks like that (obviously, I didn&amp;rsquo;t have time to transfer older notes from other systems):&lt;/p></description></item><item><title>Hmms: June</title><link>https://www.aviskase.com/articles/2020/07/01/hmms-june/</link><pubDate>Wed, 01 Jul 2020 19:10:45 +0000</pubDate><guid>https://www.aviskase.com/articles/2020/07/01/hmms-june/</guid><description>&lt;p>Time for the list of things I found interesting/amusing this month.&lt;/p>
&lt;h2 id="link-soup" >
 &lt;a href="#link-soup">Link soup&lt;/a>
&lt;/h2>
&lt;p>Let&amp;rsquo;s start with the good news: &lt;a href="https://www.openapis.org/blog/2020/06/18/openapi-3-1-0-rc0-its-here" class="external-link">OpenAPI 3.1.0 RC is out!&lt;/a>. Webhooks and reconciliation with JSON Schema are the highlights of the version. I hope tooling support won&amp;rsquo;t lag this time.&lt;/p>
&lt;p>I really liked &lt;a href="https://techleadership.substack.com/p/chance-meetings-asynchronous-collaboration" class="external-link">the article by Daniel Jarjoura&lt;/a> on communications. For example, I didn&amp;rsquo;t know that crowd brainstorming is proved to be less effective.&lt;/p></description></item><item><title>Robust APIs are weird</title><link>https://www.aviskase.com/articles/2020/06/18/robust-apis-are-weird/</link><pubDate>Thu, 18 Jun 2020 00:30:59 +0000</pubDate><guid>https://www.aviskase.com/articles/2020/06/18/robust-apis-are-weird/</guid><description>&lt;p>My first full-time API testing experience was for SOAP services. There you learn what XSD is. You learn to love it.&lt;/p>
&lt;p>Of course, you do! With server-side enabled validation based on a schema, you need not worry about stupid testing like checking what happens when you send 100 length string where expected maximum length is 50. Just make sure that XSD is correct.&lt;/p></description></item><item><title>Hmms: May</title><link>https://www.aviskase.com/articles/2020/06/02/hmms-may/</link><pubDate>Tue, 02 Jun 2020 20:33:43 +0000</pubDate><guid>https://www.aviskase.com/articles/2020/06/02/hmms-may/</guid><description>&lt;p>This was a slow month in the sense of discovering new.&lt;/p>
&lt;p>I finished the &lt;a href="https://learn.particular.net/courses/adsd-online" class="external-link">&amp;ldquo;Advanced Distributed Systems Design&amp;rdquo; course&lt;/a>.
CQRS, DDD, messaging patterns: doesn&amp;rsquo;t sound like this course is in any way helpful for testers.
Yet being &lt;em>just a tester&lt;/em> is dull. Exploring such courses helps to diminish the hardest
&lt;a href="https://wiki.c2.com/?OrdersOfIgnorance" class="external-link">order of ignorance&lt;/a> &amp;ldquo;I don&amp;rsquo;t know what I don&amp;rsquo;t know&amp;rdquo;. And as I&amp;rsquo;m wearing an
API designer hat more and more, learning about broader architectural stuff is essential.&lt;/p></description></item><item><title>Hmms: April</title><link>https://www.aviskase.com/articles/2020/05/02/hmms-april/</link><pubDate>Sat, 02 May 2020 23:43:38 +0000</pubDate><guid>https://www.aviskase.com/articles/2020/05/02/hmms-april/</guid><description>&lt;h2 id="learning" >
 &lt;a href="#learning">Learning&lt;/a>
&lt;/h2>
&lt;p>One of the good things to emerge during the corona times is more educational opportunities.&lt;/p>
&lt;p>For example, you can (and perhaps should) check the
&lt;a href="https://learn.particular.net/courses/adsd-online" class="external-link">&amp;ldquo;Advanced Distributed Systems Design&amp;rdquo; course&lt;/a> by Udi Dahan.&lt;/p>
&lt;p>Another way to satisfy knowledge thirst is to attend a virtual conference:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://apithedocs.org/" class="external-link">API The Docs&lt;/a> hosts bite-sized virtual events with discussion opportunities.&lt;/li>
&lt;li>&lt;a href="https://www.asyncapiconf.com/" class="external-link">AsyncAPI&lt;/a> has finished already, but you can watch it on YouTube.&lt;/li>
&lt;li>&lt;a href="https://www.onlinetestconf.com/" class="external-link">OnlineTestConf&lt;/a> is soon. I&amp;rsquo;m particularly excited about
&amp;ldquo;The Lessons we can Learn from the Aviation Industry&amp;rdquo; by Conor Fitzgerald.&lt;/li>
&lt;/ul>
&lt;h2 id="new-font" >
 &lt;a href="#new-font">New font&lt;/a>
&lt;/h2>
&lt;p>Any &amp;ldquo;IT person&amp;rdquo; should have a favorite monospaced font. Except for those weirdos who prefer non-monospaced.
I wasn&amp;rsquo;t very original in this matter and used &lt;a href="https://github.com/tonsky/FiraCode" class="external-link">Fira Code&lt;/a> because it has
ligatures and proper support for Cyrillic.&lt;/p></description></item><item><title>Using Insomnia for API exploration</title><link>https://www.aviskase.com/articles/2020/04/22/using-insomnia-for-api-exploration/</link><pubDate>Wed, 22 Apr 2020 01:06:01 +0000</pubDate><guid>https://www.aviskase.com/articles/2020/04/22/using-insomnia-for-api-exploration/</guid><description>&lt;p>One of the tools I use almost daily is &lt;a href="https://insomnia.rest/" class="external-link">Insomnia&lt;/a>.
It&amp;rsquo;s a great alternative to the &lt;em>P-everyone-knows-that-one.&lt;/em>
Insomnia is easy to use on Linux, has plugins, and UI is clean and simple.&lt;/p>
&lt;p>Let me show you some basic features. We will use &lt;a href="https://openweathermap.org/" class="external-link">OpenWeatherMap API&lt;/a>.&lt;/p>
&lt;h2 id="workspaces" >
 &lt;a href="#workspaces">Workspaces&lt;/a>
&lt;/h2>
&lt;p>Workspaces are collections of thematically combined requests. Some of my workspaces are service-specific,
while others contain everything related to the particular client use case or event (i.e., cross-service).&lt;/p></description></item><item><title>Hmms: March</title><link>https://www.aviskase.com/articles/2020/03/31/hmms-march/</link><pubDate>Tue, 31 Mar 2020 20:24:05 +0000</pubDate><guid>https://www.aviskase.com/articles/2020/03/31/hmms-march/</guid><description>&lt;p>Coronavirus-free edition!&lt;/p>
&lt;h2 id="top-x-videos-and-readings" >
 &lt;a href="#top-x-videos-and-readings">Top X videos and readings&lt;/a>
&lt;/h2>
&lt;p>
&lt;figure>
 &lt;picture>
 
 
 &lt;source srcset="https://www.aviskase.com/articles/2020/03/31/hmms-march/apis_meme_hu_6a201d55f49f102b.webp" type="image/webp">
 &lt;img class="mx-auto rounded" src="https://www.aviskase.com/articles/2020/03/31/hmms-march/apis_meme.jpg" alt="Meme: APIs, APIs everywhere" defer>
	&lt;/picture>
	
&lt;/figure>&lt;/p>
&lt;ul>
&lt;li>
&lt;p>Erik Wilde started a video series about API design,
and &lt;a href="https://www.youtube.com/watch?v=qc_DF01qgZg" class="external-link">the last one&lt;/a> covers pros and cons of exposing system APIs.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Tyk explains &lt;a href="https://tyk.io/considerations-before-building-your-own-api-gateway/" class="external-link">why you shouldn&amp;rsquo;t write our own API gateway&lt;/a>.
I particularly liked this part:&lt;/p>
&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>Another chose to build their own API gateway because no offerings existed that would operate in their
preferred Windows-based server environment.
I haven’t heard from them since as they still haven’t shipped their product &amp;mdash; a full year later.&lt;/p></description></item><item><title>Hmms: February</title><link>https://www.aviskase.com/articles/2020/03/08/hmms-february/</link><pubDate>Sun, 08 Mar 2020 00:35:17 +0000</pubDate><guid>https://www.aviskase.com/articles/2020/03/08/hmms-february/</guid><description>&lt;p>It&amp;rsquo;s March already, time to summarize February!&lt;/p>
&lt;h2 id="apis-trainings" >
 &lt;a href="#apis-trainings">APIs trainings&lt;/a>
&lt;/h2>
&lt;p>I did a small company-wide training about APIs. Here is &lt;a href="https://github.com/aviskase/trucs/blob/master/api101.pdf" class="external-link">the main deck&lt;/a>
and &lt;a href="https://github.com/aviskase/trucs/blob/master/api_salad.pdf" class="external-link">supplementary deck&lt;/a> left from dev lunch&amp;amp;learn.
Anyone is free to use it and if you have questions just ping me somewhere. They don&amp;rsquo;t have notes, so can be pretty
cryptic, but I am inclined to continue improving them to use for new hires.&lt;/p></description></item><item><title>API testing in Python: requests vs bravado</title><link>https://www.aviskase.com/articles/2020/02/07/api-testing-in-python-requests-vs-bravado/</link><pubDate>Fri, 07 Feb 2020 23:40:44 +0000</pubDate><guid>https://www.aviskase.com/articles/2020/02/07/api-testing-in-python-requests-vs-bravado/</guid><description>&lt;div class="callout note">&lt;p>This article is written as a result of collaboration with &lt;a href="https://testproject.io/" class="external-link">TestProject&lt;/a>.
While many of you know me as &lt;a href="https://www.aviskase.com/articles/2019/11/25/why-i-dont-use-postman/" class="external-link">a GUI-driven tools hater&lt;/a>,
that&amp;rsquo;s just my preference, so if something works for you and your company, that&amp;rsquo;s the only thing
that matters. There are no best practices and there are no best tools for everyone.&lt;/p></description></item><item><title>Hmms: January</title><link>https://www.aviskase.com/articles/2020/02/01/hmms-january/</link><pubDate>Sat, 01 Feb 2020 23:16:38 +0000</pubDate><guid>https://www.aviskase.com/articles/2020/02/01/hmms-january/</guid><description>&lt;p>Hi! Weekly hmms are transformed into monthly hmms, mostly because writing mandatory weekly posts is too cumbersome
and leaves no time to do more thematic writing. Of course, there are other reasons too. Almost all winter holidays
I had a cold (TWICE!) and being ill isn&amp;rsquo;t the best motivation ever.&lt;/p></description></item><item><title>Lunch&amp;Learn: linting OpenAPI description docs</title><link>https://www.aviskase.com/articles/2019/12/26/lunchlearn-linting-openapi-description-docs/</link><pubDate>Thu, 26 Dec 2019 19:21:00 +0000</pubDate><guid>https://www.aviskase.com/articles/2019/12/26/lunchlearn-linting-openapi-description-docs/</guid><description>&lt;p>Last yearly company retrospective showed that we want to be better at knowledge sharing. One of the suggested formats is Lunch&amp;amp;Learn, kinda like Google&amp;rsquo;s &lt;a href="https://testing.googleblog.com/2007/01/introducing-testing-on-toilet.html" class="external-link">Testing on the Toilet&lt;/a>: short non-mandatory meeting during the lunchtime (30min) with shared recording later.&lt;/p>
&lt;p>I&amp;rsquo;ve started to use them for API related topics. Tools, terminology, and other small but important things that would be beneficial to most of the development team (FYI, &lt;em>testers are part of the dev team, duh&lt;/em>). Also, it&amp;rsquo;s an opportunity to organize my brain, so I&amp;rsquo;ll be posting notes here for future reference. One thing though, &lt;strong>these posts are not supposed to be comprehensive:&lt;/strong> there is only information applicable to my team!&lt;/p></description></item><item><title>Weekly hmms: API practices, Yegor Bugaenko, culture</title><link>https://www.aviskase.com/articles/2019/12/21/weekly-hmms-api-practices-yegor-bugaenko-culture/</link><pubDate>Sat, 21 Dec 2019 19:33:46 +0000</pubDate><guid>https://www.aviskase.com/articles/2019/12/21/weekly-hmms-api-practices-yegor-bugaenko-culture/</guid><description>&lt;h2 id="api-practices-if-you-hate-your-customers" >
 &lt;a href="#api-practices-if-you-hate-your-customers">API practices if you hate your customers&lt;/a>
&lt;/h2>
&lt;p>A fun &lt;a href="https://queue.acm.org/detail.cfm?ref=rss&amp;amp;id=3375635" class="external-link">article from ACM Queue magazine&lt;/a> about how to alienate
customers from using your API. I like an &lt;a href="https://www.aviskase.com/articles/2019/09/02/your-api-is-your-public-image/" class="external-link">&amp;ldquo;anti-tutorial&amp;rdquo; form&lt;/a>,
it is easier to recall bad patterns and behaviors.&lt;/p>
&lt;blockquote>
&lt;p>One such form I filled out required me to describe the application I planned to write. &amp;lt;&amp;hellip;&amp;gt;
Sadly, I didn&amp;rsquo;t have a particular application in mind. I was going to explore the API and write a few simple
Python-based utilities to automate some daily tasks. I didn&amp;rsquo;t want to explain all that, however, for fear that
my answer would not be good enough for whoever was judging my application.
In a panic, I simply described my application as &amp;ldquo;dark purple with white highlights.&amp;rdquo;
A few weeks later my application was approved. So far, I haven&amp;rsquo;t been visited by any auditor SWAT teams,
but as a precaution my code editor has been themed in dark purple with white highlights ever since.&lt;/p></description></item><item><title>Weekly hmms: advent of code, NGINX, APIs</title><link>https://www.aviskase.com/articles/2019/12/14/weekly-hmms-advent-of-code-nginx-apis/</link><pubDate>Sat, 14 Dec 2019 22:32:58 +0000</pubDate><guid>https://www.aviskase.com/articles/2019/12/14/weekly-hmms-advent-of-code-nginx-apis/</guid><description>&lt;h2 id="advent-of-code" >
 &lt;a href="#advent-of-code">Advent of code&lt;/a>
&lt;/h2>
&lt;p>Last week I forgot to mention that I started solving the &lt;a href="https://adventofcode.com/" class="external-link">Advent of Code&lt;/a> challenges. This is my first year, so I don&amp;rsquo;t even try to have elegant solutions. Old trusty Python, &lt;a href="https://github.com/aviskase/advent-of-code" class="external-link">lists&amp;rsquo; and dicts&amp;rsquo; galore&lt;/a>.&lt;/p>
&lt;p>The reason is simple: the goal is to go through all 25 days. Being consistent is not easy, and today I had to solve two days because of yesterday&amp;rsquo;s Christmas party.&lt;/p></description></item><item><title>Weekly hmms: communities, laptops &amp; Linux</title><link>https://www.aviskase.com/articles/2019/12/07/weekly-hmms-communities-laptops-linux/</link><pubDate>Sat, 07 Dec 2019 23:50:35 +0000</pubDate><guid>https://www.aviskase.com/articles/2019/12/07/weekly-hmms-communities-laptops-linux/</guid><description>&lt;p>This time, the proper title would be &amp;ldquo;Weekly Arghs.&amp;rdquo;&lt;/p>
&lt;h2 id="testing-communities" >
 &lt;a href="#testing-communities">Testing communities&lt;/a>
&lt;/h2>
&lt;p>When I decided to become a tester, the first-ever topic I encountered was &lt;del>discussions&lt;/del> rants about &amp;ldquo;ISO/IEC/IEEE 29119 Software Testing&amp;rdquo; set of standards. I was fresh out of the university, so I couldn&amp;rsquo;t have legal access to these documents, and naturally, I sided with opponents. Good or bad (mostly bad), I don&amp;rsquo;t care: if you wish to have guidelines or standards for the profession, it must be freely accessible to everyone. The end.&lt;/p></description></item><item><title>Weekly hmms: watching, reading, learning</title><link>https://www.aviskase.com/articles/2019/11/30/weekly-hmms-watching-reading-learning/</link><pubDate>Sat, 30 Nov 2019 19:13:56 +0000</pubDate><guid>https://www.aviskase.com/articles/2019/11/30/weekly-hmms-watching-reading-learning/</guid><description>&lt;h2 id="watching" >
 &lt;a href="#watching">Watching&lt;/a>
&lt;/h2>
&lt;p>During lunch, I watch videos from conferences. This week my favorites were:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://www.youtube.com/watch?v=yYEne30CWUQ" class="external-link">Mike Kistler: The Importance of API Design Guidelines&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.youtube.com/watch?v=qCdpTji8nxo" class="external-link">Kevin Lacker: How to Design Great APIs&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>The second one has a nice quotable passage:&lt;/p>
&lt;blockquote>
&lt;p>A good API will let you be lazy.&lt;/p>
&lt;p>A great API will empower you to be &lt;em>really lazy&lt;/em>.&lt;/p></description></item><item><title>Why I don't use Postman</title><link>https://www.aviskase.com/articles/2019/11/25/why-i-dont-use-postman/</link><pubDate>Mon, 25 Nov 2019 01:20:58 +0000</pubDate><guid>https://www.aviskase.com/articles/2019/11/25/why-i-dont-use-postman/</guid><description>&lt;p>Being an API person, many people would expect me to use Postman. It&amp;rsquo;s the most well-known tool for HTTP-based APIs and it&amp;rsquo;s so ubiquitous that some use it even for SOAP (not the best idea ever).&lt;/p>
&lt;p>&lt;em>I did use Postman.&lt;/em> &lt;a href="https://gist.github.com/aviskase/e642248c35e400b56e2489430952369f" class="external-link">My gist with installation scripts for Linux&lt;/a> was so popular that Postman support team reached me out when it started causing non-obvious issues with updates. I also used this tool for internship courses. Yet I won&amp;rsquo;t do it anymore and let me explain why.&lt;/p></description></item><item><title>Weekly hmms: Fowler, collaborations, HTML, and CTS</title><link>https://www.aviskase.com/articles/2019/11/23/weekly-hmms-fowler-collaborations-html-and-cts/</link><pubDate>Sat, 23 Nov 2019 02:45:30 +0000</pubDate><guid>https://www.aviskase.com/articles/2019/11/23/weekly-hmms-fowler-collaborations-html-and-cts/</guid><description>&lt;p>New week, new hmms!&lt;/p>
&lt;h2 id="martin-fowler-and-exploratory-testing" >
 &lt;a href="#martin-fowler-and-exploratory-testing">Martin Fowler and exploratory testing&lt;/a>
&lt;/h2>
&lt;p>&lt;em>All&lt;/em> testers&amp;rsquo; slack groups, forums, and blogs erupted this week with the tidings of joy: &lt;a href="https://martinfowler.com/bliki/ExploratoryTesting.html" class="external-link">Martin Fowler wrote a post about exploratory testing&lt;/a>. Of course, it seems a bit &lt;em>late&lt;/em> and &lt;em>cursory,&lt;/em> but at least now we have &lt;em>a very respected source&lt;/em> to point to.&lt;/p></description></item><item><title>Weekly hmms: valuations, job titles, conferences, APIs</title><link>https://www.aviskase.com/articles/2019/11/16/weekly-hmms-valuations-job-titles-conferences-apis/</link><pubDate>Sat, 16 Nov 2019 02:53:21 +0000</pubDate><guid>https://www.aviskase.com/articles/2019/11/16/weekly-hmms-valuations-job-titles-conferences-apis/</guid><description>&lt;p>To assume I could push anything on Fridays was too optimistic. Thus, I&amp;rsquo;ll commit to Saturdays.&lt;/p>
&lt;p>Let&amp;rsquo;s start.&lt;/p>
&lt;h2 id="saas-valuations" >
 &lt;a href="#saas-valuations">SaaS valuations&lt;/a>
&lt;/h2>
&lt;p>My current company, &lt;a href="https://www.netgovern.com/" class="external-link">NetGovern&lt;/a>, operates with an open-book management mindset. Apart from other information, all employees know company finances so we can better understand what is our real position and where we plan to go next.&lt;/p></description></item><item><title>Weekly hmms: \_\_init\_\_</title><link>https://www.aviskase.com/articles/2019/11/11/weekly-hmms-__init__/</link><pubDate>Mon, 11 Nov 2019 03:40:16 +0000</pubDate><guid>https://www.aviskase.com/articles/2019/11/11/weekly-hmms-__init__/</guid><description>&lt;h2 id="__init__" >
 &lt;a href="#__init__">__init__&lt;/a>
&lt;/h2>
&lt;p>This post initializes a series of weekly ponderings, interesting links, and other &lt;em>hmms.&lt;/em> Think of it as typical a &amp;ldquo;Five for Friday,&amp;rdquo; but without number constraint and more emphasis on effects on my thought process. These posts should come out on Fridays, but because &lt;em>I forgot to commit,&lt;/em> this one is late.&lt;/p></description></item><item><title>A tester’s guide on hunting for API related sources</title><link>https://www.aviskase.com/articles/2019/10/26/a-testers-guide-on-hunting-for-api-related-sources/</link><pubDate>Sat, 26 Oct 2019 16:52:40 +0000</pubDate><guid>https://www.aviskase.com/articles/2019/10/26/a-testers-guide-on-hunting-for-api-related-sources/</guid><description>&lt;p>You&amp;rsquo;ve got interested in APIs. Or you&amp;rsquo;re not a fan (yet) but you have to test it. Whatever the cause, you&amp;rsquo;d want to develop a mental model of this vast field. And a model construction demands a generous supply of information to consume and digest.&lt;/p>
&lt;p>I prefer to seek knowledge in these five areas:&lt;/p></description></item><item><title>How to test API usability: part 2</title><link>https://www.aviskase.com/articles/2019/10/19/how-to-test-api-usability-part-2/</link><pubDate>Sat, 19 Oct 2019 00:00:00 +0000</pubDate><guid>https://www.aviskase.com/articles/2019/10/19/how-to-test-api-usability-part-2/</guid><description>&lt;p>This is part two of a two-parter. Check out &lt;a href="https://www.aviskase.com/articles/2019/10/13/how-to-test-api-usability-part-1/" class="internal-link">part one&lt;/a>.&lt;/p>
&lt;h2 id="empirical-methods" >
 &lt;a href="#empirical-methods">Empirical methods&lt;/a>
&lt;/h2>
&lt;p>The distinction between analytical and empirical methods is that the latter investigates how real users will use the product.&lt;/p>
&lt;p>But don&amp;rsquo;t assume that empirical methods are by default better than analytical: both are important because they discover different problems. &lt;a href="https://link.springer.com/content/pdf/10.1007%2F978-3-642-34347-6_10.pdf" class="external-link">This research&lt;/a> showed that heuristics were more efficient in finding documentation and structural problems, whereas empirical methods were more useful in finding UX and runtime specific issues.&lt;/p></description></item><item><title>How to test API usability: part 1</title><link>https://www.aviskase.com/articles/2019/10/13/how-to-test-api-usability-part-1/</link><pubDate>Sun, 13 Oct 2019 00:00:00 +0000</pubDate><guid>https://www.aviskase.com/articles/2019/10/13/how-to-test-api-usability-part-1/</guid><description>&lt;p>&lt;strong>Disclaimer:&lt;/strong> this is a translation of &lt;a href="https://quality-lab.ru/blog/api-usability-testing/" class="external-link">the article&lt;/a> written 2 years ago for a corporate blog. Bear in mind, at the moment of the writing I was testing SOAP services and Excel-based import/export at big government project, so most of the examples relate to that experience.&lt;/p>
&lt;hr>
&lt;p>Usability is one of the most crucial quality attributes of an API. Let&amp;rsquo;s talk about why, when, and how we can assess this characteristic.&lt;/p></description></item><item><title>Internal struggle with language gymnastics</title><link>https://www.aviskase.com/articles/2019/10/05/internal-struggle-with-language-gymnastics/</link><pubDate>Sat, 05 Oct 2019 00:00:00 +0000</pubDate><guid>https://www.aviskase.com/articles/2019/10/05/internal-struggle-with-language-gymnastics/</guid><description>&lt;p>During the RSTA class I asked a question about language and communications:&lt;/p>
&lt;blockquote>
&lt;p>On one hand, I wholly agree with the notion that we should be attentive with words. Like checking vs testing, &amp;ldquo;quality assurance&amp;rdquo;, and all those other things. I find myself as they say &amp;ldquo;nit-picking&amp;rdquo; quite often.&lt;/p>
&lt;p>On the other hand, I also follow a rule &amp;ldquo;if your team understands you, words don&amp;rsquo;t matter&amp;rdquo;. Especially, if you come to the established project with existing vocabulary. It can be bizarre and absurd (my favorite was &amp;ldquo;bug validation&amp;rdquo; for the process of checking bug fixes), but it&amp;rsquo;s habitual to everyone, so you&amp;rsquo;ll likely spend more time trying to &amp;ldquo;reteach&amp;rdquo; than working. And you&amp;rsquo;ll probably fail.&lt;/p></description></item><item><title>Achievement unlocked: RSTA</title><link>https://www.aviskase.com/articles/2019/09/30/achievement-unlocked-rsta/</link><pubDate>Mon, 30 Sep 2019 00:00:00 +0000</pubDate><guid>https://www.aviskase.com/articles/2019/09/30/achievement-unlocked-rsta/</guid><description>&lt;p>Landscape of testing related courses is problematic. On one hand, there are &lt;em>lots&lt;/em> of courses. On the other hand, there are &lt;em>few&lt;/em> courses &lt;em>I would consider.&lt;/em> Either they are lackluster and certificate-centered, or entry-level-only, or mind-bogglingly expensive. And about the last bit. Many say that if a company provide a training budget, costs don&amp;rsquo;t matter. Well, maybe if that company is one of &lt;a href="https://en.wikipedia.org/wiki/Facebook,_Apple,_Amazon,_Netflix_and_Google" class="external-link">FAANG&lt;/a>, you can think so. But I work in a small one and I don&amp;rsquo;t want to throw its (our?) money away.&lt;/p></description></item><item><title>SOAP testing 101</title><link>https://www.aviskase.com/articles/2019/09/15/soap-testing-101/</link><pubDate>Sun, 15 Sep 2019 00:00:00 +0000</pubDate><guid>https://www.aviskase.com/articles/2019/09/15/soap-testing-101/</guid><description>&lt;p>&lt;strong>Disclaimer:&lt;/strong> this is a translation of &lt;a href="https://quality-lab.ru/blog/soap-api-testing/" class="external-link">the article&lt;/a> written 2 years ago for a corporate blog. I didn&amp;rsquo;t do a word-for-word translation because the original article went through an editor, whose style was not that close to mine. Too watered down and &amp;ldquo;official.&amp;rdquo; Also, some examples don&amp;rsquo;t make sense in English. Still, I didn&amp;rsquo;t update it too radically. Bear in mind, at the moment of the writing I was testing SOAP services and Excel-based import/export at big government project, so most of the examples relate to that experience.&lt;/p></description></item><item><title>Stereotype Rant</title><link>https://www.aviskase.com/articles/2019/09/04/stereotype-rant/</link><pubDate>Wed, 04 Sep 2019 00:00:00 +0000</pubDate><guid>https://www.aviskase.com/articles/2019/09/04/stereotype-rant/</guid><description>&lt;p>We live in the world of memes and funny pictures. Nothing wrong with that. Some companies started posting humorous content too, and, again, that&amp;rsquo;s totally fine: I myself prefer these to dry corporate pitches. But it&amp;rsquo;s a real shame when you see a post like this from a test agency:&lt;/p></description></item><item><title>Your API is your public image</title><link>https://www.aviskase.com/articles/2019/09/02/your-api-is-your-public-image/</link><pubDate>Mon, 02 Sep 2019 00:00:00 +0000</pubDate><guid>https://www.aviskase.com/articles/2019/09/02/your-api-is-your-public-image/</guid><description>&lt;p>&lt;strong>Disclaimer:&lt;/strong> this is a translation of &lt;a href="https://quality-lab.ru/blog/your-api-is-your-public-face/" class="external-link">the article&lt;/a> written 2 years ago for a corporate blog. I didn&amp;rsquo;t do a word-for-word translation because the original article went through an editor, whose style was not that close to mine. Too watered down and &amp;ldquo;official.&amp;rdquo; Also, some examples don&amp;rsquo;t make sense in English. Still, I didn&amp;rsquo;t update it too radically. Bear in mind, at the moment of the writing I was testing SOAP services and Excel-based import/export at big government project, so most of the examples relate to that experience.&lt;/p></description></item><item><title>Revision: testers in this world</title><link>https://www.aviskase.com/articles/2019/08/26/revision-testers-in-this-world/</link><pubDate>Mon, 26 Aug 2019 00:00:00 +0000</pubDate><guid>https://www.aviskase.com/articles/2019/08/26/revision-testers-in-this-world/</guid><description>&lt;p>Recently I&amp;rsquo;ve remembered &lt;a href="https://www.aviskase.com/articles/2018/01/23/testers-in-this-world/" class="internal-link">my old article&lt;/a> and wondered, how much my thoughts have changed and how they align to the principles of context-driven and modern testing (and yes, I don&amp;rsquo;t see them as contradicting each other).&lt;/p>
&lt;div class="callout warning">&lt;p>Remark in the parentheses is a bit stupid. It was discussed in the &lt;a href="https://www.angryweasel.com/ABTesting/ab-testing-episode-94-modern-testing-meets-context-driven-testing/" class="external-link">AB Testing episode 94&lt;/a> and at least for Alan and Brent there is no real contradiction.&lt;/p></description></item><item><title>Mega mind map: version #2</title><link>https://www.aviskase.com/articles/2018/03/19/mega-mind-map-version-2/</link><pubDate>Mon, 19 Mar 2018 00:00:00 +0000</pubDate><guid>https://www.aviskase.com/articles/2018/03/19/mega-mind-map-version-2/</guid><description>&lt;p>My &lt;a href="https://github.com/aviskase/mega-mind-map" class="external-link">not-so-mega mind map&lt;/a> has grown a little bit. I finally added exploratory testing tours and ideas on how to make test cases less rigid, all that great stuff from &amp;ldquo;Exploratory Software Testing&amp;rdquo; by James A. Whittaker.&lt;/p>
&lt;p>
&lt;figure>
 &lt;picture>
 
 
 &lt;source srcset="https://www.aviskase.com/articles/2018/03/19/mega-mind-map-version-2/mmm_v2_hu_64d5395312397fd0.webp" type="image/webp">
 &lt;img class="mx-auto rounded" src="https://www.aviskase.com/articles/2018/03/19/mega-mind-map-version-2/mmm_v2.png" alt="Mega mind map version 2" defer>
	&lt;/picture>
	
&lt;/figure>&lt;/p></description></item><item><title>Testers in this world</title><link>https://www.aviskase.com/articles/2018/01/23/testers-in-this-world/</link><pubDate>Tue, 23 Jan 2018 00:00:00 +0000</pubDate><guid>https://www.aviskase.com/articles/2018/01/23/testers-in-this-world/</guid><description>&lt;p>Every tester saw those articles: &amp;ldquo;Testing is dead&amp;rdquo;, &amp;ldquo;Manual testing is dead&amp;rdquo;, &amp;ldquo;Testing is not dead&amp;rdquo;, &amp;ldquo;Automation is not testing&amp;rdquo;, &amp;ldquo;Company XXX has no testers and is happy about it&amp;rdquo;, etc. They might get on nerves. I love my craft, but sometimes something is nibbling at the back of my mind. Something that keeps me wondering: maybe I should move to a different role? So, I unscrambled this &amp;ldquo;something&amp;rdquo; and found an explanation why these thoughts are there and why I won&amp;rsquo;t leave testing =)&lt;/p></description></item><item><title>2018 and mega mind map</title><link>https://www.aviskase.com/articles/2018/01/06/2018-and-mega-mind-map/</link><pubDate>Sat, 06 Jan 2018 00:00:00 +0000</pubDate><guid>https://www.aviskase.com/articles/2018/01/06/2018-and-mega-mind-map/</guid><description>&lt;p>Well, it&amp;rsquo;s been a while. I don&amp;rsquo;t want to make so called &amp;ldquo;new year resolutions&amp;rdquo;, but it&amp;rsquo;s better to add a repeating task in the RTM to write something here xD&lt;/p>
&lt;p>2018 started shaky. I left my first real place of work &amp;mdash; Quality Lab &amp;mdash; Alma mater of testing. This decision was heartbreaking, yet expected. On the bright side, now I have time to condition my brain into the normal mode again: for the last 1.5 year I wasn&amp;rsquo;t productive in studying and reading.&lt;/p></description></item><item><title>Enabling L2TP/IPSec in Ubuntu</title><link>https://www.aviskase.com/articles/2017/03/19/enabling-l2tpipsec-in-ubuntu/</link><pubDate>Sun, 19 Mar 2017 00:00:00 +0000</pubDate><guid>https://www.aviskase.com/articles/2017/03/19/enabling-l2tpipsec-in-ubuntu/</guid><description>&lt;p>Linux is like that: you can do anything, but sometimes it&amp;rsquo;s not easy for a common user. As for me, I hate writing config files for VPN, because network-manager is awesome. But sometimes it&amp;rsquo;s not easy to make it work.&lt;/p>
&lt;p>The biggest problem for me is LT2PT/IPSec. There is &lt;a href="http://blog.z-proj.com/enabling-l2tp-over-ipsec-on-ubuntu-16-04/" class="external-link">an excellent article&lt;/a> on how to enable it using &lt;code>network-manager-l2tp&lt;/code>. But as on-line articles have a tendency to be removed, I want to save these instructions here.&lt;/p></description></item><item><title>Thoughts on "The 'A' Word"</title><link>https://www.aviskase.com/articles/2016/07/30/thoughts-on-the-a-word/</link><pubDate>Sat, 30 Jul 2016 00:00:00 +0000</pubDate><guid>https://www.aviskase.com/articles/2016/07/30/thoughts-on-the-a-word/</guid><description>&lt;p>Alan Page is known as one of the authors of &amp;ldquo;How We Test Software at Microsoft&amp;rdquo;. But there is another good book and it&amp;rsquo;s called &amp;ldquo;The &amp;lsquo;A&amp;rsquo; Word&amp;rdquo;. You can buy it on &lt;a href="https://leanpub.com/TheAWord" class="external-link">LeanPub&lt;/a>.&lt;/p>
&lt;p>The book is about automation in testing, but not how &lt;em>to do&lt;/em> it &amp;mdash; it&amp;rsquo;s about how &lt;em>to think&lt;/em> about it. It&amp;rsquo;s short, just 58 pages, but very dense with ideas and Alan&amp;rsquo;s opinions.&lt;/p></description></item><item><title>Notes for course "Intro to Linux"</title><link>https://www.aviskase.com/articles/2016/07/27/notes-for-course-intro-to-linux/</link><pubDate>Wed, 27 Jul 2016 00:00:00 +0000</pubDate><guid>https://www.aviskase.com/articles/2016/07/27/notes-for-course-intro-to-linux/</guid><description>&lt;p>If there is a Linux course on a platform, I&amp;rsquo;ll always watch it. Those who know me are aware that I am using some kind of Debian-based distributive full time &amp;mdash; I&amp;rsquo;m not a hardcore fan, but I like it here. One might ask: why am I watching all these courses when they are mostly for beginners? Answer is simple: repetition is the mother of learning, plus there are always some tricks that you forget or can become more interesting with time.&lt;/p></description></item><item><title>Course "Intro to DevOps" by Udacity</title><link>https://www.aviskase.com/articles/2016/07/17/course-intro-to-devops-by-udacity/</link><pubDate>Sun, 17 Jul 2016 00:00:00 +0000</pubDate><guid>https://www.aviskase.com/articles/2016/07/17/course-intro-to-devops-by-udacity/</guid><description>&lt;p>I love MOOCs: Coursera, Udacity, Stepic. There are so many courses to watch for entire life. Just now watched a course &lt;a href="https://www.udacity.com/course/intro-to-devops--ud611" class="external-link">Intro to DevOps&lt;/a> by Udacity.&lt;/p>
&lt;p>The course is concise and comprehensive. Here are some notes I&amp;rsquo;ve made.&lt;/p>
&lt;hr>
&lt;h2 id="devops" >
 &lt;a href="#devops">DevOps&lt;/a>
&lt;/h2>
&lt;p>&lt;em>DevOps&lt;/em> is the practice of operations and development engineers participating together in the entire service life-cycle, from design through the development process to production support.&lt;/p></description></item><item><title>Test planning: questions by Google (outline)</title><link>https://www.aviskase.com/articles/2016/06/06/test-planning-questions-by-google-outline/</link><pubDate>Mon, 06 Jun 2016 00:00:00 +0000</pubDate><guid>https://www.aviskase.com/articles/2016/06/06/test-planning-questions-by-google-outline/</guid><description>&lt;p>Google Testing Blog made all testers happy &lt;a href="http://googletesting.blogspot.com/2016/06/the-inquiry-method-for-test-planning.html" class="external-link">one more time&lt;/a>. The article provides a comprehensive list of questions to be asked before writing a test plan (or a test strategy). So I&amp;rsquo;ve made &lt;a href="https://www.mindomo.com/outline/8d87278fd21f4c1a8f0ab413c2596f1e" class="external-link">an outline&lt;/a> to share.&lt;/p></description></item><item><title>Thoughts on "Dear Evil Tester"</title><link>https://www.aviskase.com/articles/2016/05/09/thoughts-on-dear-evil-tester/</link><pubDate>Mon, 09 May 2016 00:00:00 +0000</pubDate><guid>https://www.aviskase.com/articles/2016/05/09/thoughts-on-dear-evil-tester/</guid><description>&lt;p>Recently I&amp;rsquo;ve read a book &amp;ldquo;Dear Evil Tester&amp;rdquo; by Alan Richardson. The book has three parts: published letters, unpublished, essays.&lt;/p>
&lt;p>The first part is kick-ass. You can just quote a random sentence from it and it will be great.&lt;/p>
&lt;p>For instance, I really want to use this one as a personal motto:&lt;/p></description></item><item><title>Coverage metrics</title><link>https://www.aviskase.com/articles/2016/05/02/coverage-metrics/</link><pubDate>Mon, 02 May 2016 00:00:00 +0000</pubDate><guid>https://www.aviskase.com/articles/2016/05/02/coverage-metrics/</guid><description>&lt;p>There are two strange metrics on the project where I work: how much is tested and how much works. Every time I should update these two numbers my head explodes. I don&amp;rsquo;t like them at all.&lt;/p>
&lt;h2 id="what-means-how-much-is-tested" >
 &lt;a href="#what-means-how-much-is-tested">What means &amp;ldquo;how much is tested&amp;rdquo;?&lt;/a>
&lt;/h2>
&lt;p>Traditionally we are writing a percentage of completed checks out of all checks in the checklist. I don&amp;rsquo;t like this tradition, because checks are different. Here you should just assert error&amp;rsquo;s text message, and there you should produce this error under some conditions.&lt;/p></description></item><item><title>Testing knowledge transfer (outline)</title><link>https://www.aviskase.com/articles/2016/04/24/testing-knowledge-transfer-outline/</link><pubDate>Sun, 24 Apr 2016 00:00:00 +0000</pubDate><guid>https://www.aviskase.com/articles/2016/04/24/testing-knowledge-transfer-outline/</guid><description>&lt;p>There is &lt;a href="http://positiveflower.blogspot.in/2016/04/blog-post.html" class="external-link">an excellent blog post&lt;/a> (ru) by Elena Poplouhina with the list of what not to forget to tell about testing to project newcomers. So I&amp;rsquo;ve made an English translation with some correction. Here it is &lt;a href="https://www.mindomo.com/outline/ec7abbf581494a82a86539ca68e0ab5e" class="external-link">as an outline&lt;/a>.&lt;/p></description></item><item><title>List of articles and videos on API and web services testing</title><link>https://www.aviskase.com/articles/2016/01/09/list-of-articles-and-videos-on-api-and-web-services-testing/</link><pubDate>Sat, 09 Jan 2016 00:00:00 +0000</pubDate><guid>https://www.aviskase.com/articles/2016/01/09/list-of-articles-and-videos-on-api-and-web-services-testing/</guid><description>&lt;p>There was a great list on now discontinued site &lt;code>qahelp.net&lt;/code>. I managed to save it through yandex cache (even google cache and web archive couldn&amp;rsquo;t help).&lt;/p>
&lt;h2 id="difference-between-api-and-web-services" >
 &lt;a href="#difference-between-api-and-web-services">Difference between API and web services&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="http://stackoverflow.com/questions/808421/api-vs-webservice" class="external-link">API vs Web Service&lt;/a>, &lt;a href="http://programmers.stackexchange.com/questions/38691/difference-between-web-api-and-web-service" class="external-link">Difference between web API and web service&lt;/a>, &lt;a href="http://www.differencebetween.net/technology/internet/difference-between-api-and-web-service/#ixzz3l5QC4tYj" class="external-link">Difference between API and web service&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://readwrite.com/2013/09/19/api-defined/" class="external-link">What APIs Are And Why They’re Important&lt;/a> &amp;mdash; Brian Proffitt&lt;/li>
&lt;li>&lt;a href="http://www.ibm.com/developerworks/webservices/tutorials/ws-understand-web-services1/ws-understand-web-services1.html#N10144" class="external-link">What are web services&lt;/a> (section) &amp;mdash; Nicholas Chase&lt;/li>
&lt;li>&lt;a href="https://www.cl.cam.ac.uk/~ib249/teaching/Lecture1.handout.pdf" class="external-link">Introduction to Web Services&lt;/a> (PDF) &amp;mdash; Ioannis G. Baltopoulos&lt;/li>
&lt;/ul>
&lt;h2 id="soap-and-rest" >
 &lt;a href="#soap-and-rest">SOAP and REST&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="http://www.ibm.com/developerworks/webservices/tutorials/ws-understand-web-services1/ws-understand-web-services1.html#N10278" class="external-link">Understanding SOAP&lt;/a> (section) &amp;mdash; Nicholas Chase&lt;/li>
&lt;li>&lt;a href="http://www.restapitutorial.com/lessons/whatisrest.html" class="external-link">What is REST?&lt;/a> (video) &amp;mdash; Todd Fredrich&lt;/li>
&lt;li>&lt;a href="http://blog.smartbear.com/apis/understanding-soap-and-rest-basics/" class="external-link">Understanding SOAP and REST Basics And Differences&lt;/a> &amp;mdash; John Mueller&lt;/li>
&lt;li>&lt;a href="http://www.infoq.com/articles/webber-rest-workflow/" class="external-link">How to GET a cup of coffee&lt;/a> &amp;mdash; Jim Webber, Savas Parastatidis &amp;amp; Ian Robinson&lt;/li>
&lt;/ul>
&lt;h2 id="api-and-web-services-testing" >
 &lt;a href="#api-and-web-services-testing">API and web services testing&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://blog.udemy.com/api-testing/" class="external-link">API Testing: Why it matters and how to do it&lt;/a> &amp;mdash; Michael Churchman&lt;/li>
&lt;li>&lt;a href="http://testingisbelieving.blogspot.co.uk/2013/11/johnny-mnemonic-iceovermad.html" class="external-link">Johnny mnemonic &amp;mdash; ICEOVERMAD&lt;/a> &amp;mdash; Ash Winter&lt;/li>
&lt;li>&lt;a href="http://www.soapui.org/testing-dojo/welcome-to-the-dojo/overview.html" class="external-link">The API Testing Dojo&lt;/a> &amp;mdash; Smart Bear&lt;/li>
&lt;li>&lt;a href="http://qxf2.com/blog/api-testing-ui-tools-postman" class="external-link">API Testing: UI Tools&lt;/a> &amp;mdash; Avinash Shetty&lt;/li>
&lt;li>&lt;a href="http://qxf2.com/blog/api-testing-developer-tools" class="external-link">API Testing: Developer Tools&lt;/a> &amp;mdash; Avinash Shetty&lt;/li>
&lt;li>&lt;a href="http://weekendtesting.com/?p=3898" class="external-link">WTEU-53 &amp;mdash; An introduction to API Testing&lt;/a> &amp;mdash; Amy Phillips&lt;/li>
&lt;li>&lt;a href="http://blog.eviltester.com/2015/01/some-api-testing-basic-introductory.html" class="external-link">Some API Testing Basic Introductory Notes and Tools&lt;/a> &amp;mdash; Alan Richardson&lt;/li>
&lt;/ul>
&lt;h2 id="deep-dive-into-rest-api" >
 &lt;a href="#deep-dive-into-rest-api">Deep dive into REST API&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="http://blog.octo.com/en/design-a-rest-api/" class="external-link">How to design a REST API&lt;/a> &amp;mdash; Antoine Chantalou, Jérémy Buisson, Mohamed Kissa, Florent Jaby, Nicolas Laurent, Augustin Grimprel, Benoit Lafontaine&lt;/li>
&lt;li>&lt;a href="http://toddfredrich.com/commoditization-of-the-user-interface.html" class="external-link">The commoditization of the user interface&lt;/a> &amp;mdash; Todd Friedrich&lt;/li>
&lt;li>&lt;a href="http://toddfredrich.com/restexpress-api-application-layers.html" class="external-link">REST API application layers&lt;/a> &amp;mdash; Todd Friedrich&lt;/li>
&lt;li>&lt;a href="http://www.thoughtworks.com/insights/blog/rest-api-design-resource-modeling" class="external-link">REST API design: Resource modeling&lt;/a> &amp;mdash; Prakash Subramaniam&lt;/li>
&lt;li>&lt;a href="http://martinfowler.com/articles/richardsonMaturityModel.html" class="external-link">Richardson maturity model&lt;/a> &amp;mdash; Martin Fowler&lt;/li>
&lt;/ul>
&lt;h2 id="api-security-testing" >
 &lt;a href="#api-security-testing">API security testing&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="http://blog.smartbear.com/readyapi/api-security-testing-how-to-hack-an-api-and-get-away-with-it-part-1-of-3/" class="external-link">How to Hack an API and Get Away with It (Part 1 of 3)&lt;/a> &amp;mdash; Ole Lensmar&lt;/li>
&lt;li>&lt;a href="http://blog.smartbear.com/readyapi/api-security-testing-how-to-hack-an-api-and-get-away-with-it-part-2-of-3/" class="external-link">How to Hack an API and Get Away with It (Part 2 of 3)&lt;/a> &amp;mdash; Ole Lensmar&lt;/li>
&lt;li>&lt;a href="http://blog.smartbear.com/readyapi/api-security-testing-how-to-hack-an-api-and-get-away-with-it-part-3-of-3/" class="external-link">How to Hack an API and Get Away with It (Part 3 of 3)&lt;/a> &amp;mdash; Ole Lensmar&lt;/li>
&lt;li>&lt;a href="http://weekendtesting.com/?p=4033" class="external-link">WTEU-56 &amp;mdash; Security testing for APIs&lt;/a> &amp;mdash; Dan Billing&lt;/li>
&lt;/ul>
&lt;h2 id="service-virtualization" >
 &lt;a href="#service-virtualization">Service virtualization&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="http://smartbear.com/all-resources/articles/what-is-service-virtualization" class="external-link">What is service virtualization&lt;/a> &amp;mdash; John Mueller&lt;/li>
&lt;li>&lt;a href="http://blog.smartbear.com/readyapi/hardening-your-application-against-api-failures-with-api-virtualization/" class="external-link">Hardening Your Application Against API Failures with API Virtualization&lt;/a> &amp;mdash; Lorinda Brandon&lt;/li>
&lt;li>&lt;a href="http://www.stickyminds.com/article/4-ways-boost-your-test-process-service-virtualization" class="external-link">4 Ways to Boost Your Test Process with Service Virtualization&lt;/a> &amp;mdash; Bas Dijkstra&lt;/li>
&lt;/ul>
&lt;h2 id="introduction-to-microservices" >
 &lt;a href="#introduction-to-microservices">Introduction to microservices&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="http://martinfowler.com/articles/microservices.html" class="external-link">Microservices&lt;/a> &amp;mdash; Martin Fowler&lt;/li>
&lt;li>&lt;a href="https://www.nginx.com/blog/introduction-to-microservices/" class="external-link">Introduction to microservices&lt;/a> &amp;mdash; Chris Richardson&lt;/li>
&lt;li>&lt;a href="http://blog.smartbear.com/microservices/delving-into-the-microservices-architecture/" class="external-link">Delving into the Microservices Architecture&lt;/a> &amp;mdash; John Mueller&lt;/li>
&lt;li>&lt;a href="https://blog.yourkarma.com/building-microservices-at-karma" class="external-link">How we build microservices at Karma&lt;/a> &amp;mdash; Stefan Borsje&lt;/li>
&lt;li>&lt;a href="http://www.javaworld.com/article/2863409/soa/why-2015-will-be-the-year-of-microservices.html" class="external-link">Why 2015 will be the year of microservices&lt;/a> &amp;mdash; Eric Knorr&lt;/li>
&lt;/ul>
&lt;h2 id="microservices-testing" >
 &lt;a href="#microservices-testing">Microservices testing&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="http://martinfowler.com/articles/microservice-testing/" class="external-link">Testing Strategies in a Microservice Architecture&lt;/a> &amp;mdash; Toby Clemson et al.&lt;/li>
&lt;li>&lt;a href="http://blog.smartbear.com/apm/performance-issue-considerations-for-microservices-apis/" class="external-link">Performance Issue Considerations for Microservices APIs&lt;/a> &amp;mdash; John Mueller&lt;/li>
&lt;li>&lt;a href="http://blog.xebialabs.com/2014/12/31/8-questions-need-ask-microservices-containers-docker-2015/" class="external-link">8 Questions You Need to Ask About Microservices, Containers &amp;amp; Docker in 2015&lt;/a> &amp;mdash; Andrew Phillips&lt;/li>
&lt;li>&lt;a href="http://www.infoq.com/presentations/integration-tests-scam" class="external-link">Integration tests are a scam&lt;/a> &amp;mdash; JB Rainsberger&lt;/li>
&lt;li>&lt;a href="https://prezi.com/09emobpvigo2/throw-away-your-integration-tests/" class="external-link">Throw away your integration tests&lt;/a> (slides) &amp;mdash; Beth Skurrie&lt;/li>
&lt;/ul>
&lt;h2 id="more-on-api" >
 &lt;a href="#more-on-api">More on API&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>&lt;del>&lt;!-- raw HTML omitted -->What is API management &amp;mdash; A Brief Primer&lt;!-- raw HTML omitted --> &amp;mdash; Navdeep Sidhu&lt;/del> &lt;em>Upd. resource is no more available&lt;/em>&lt;/li>
&lt;li>&lt;a href="http://www.infoq.com/research/api-management" class="external-link">API management platform capabilities&lt;/a> &amp;mdash; Jeevak Kasarkod&lt;/li>
&lt;li>&lt;a href="http://blog.smartbear.com/iot-2/the-api-is-the-invisible-hand-behind-the-internet-of-things" class="external-link">The API is the Invisible Hand Behind the Internet of Things&lt;/a> &amp;mdash; Jennifer Riggins&lt;/li>
&lt;li>&lt;a href="http://blog.smartbear.com/apis/hypermedia-apis/working-with-hypermedia-apis" class="external-link">Working with Hypermedia APIs&lt;/a> &amp;mdash; John Mueller&lt;/li>
&lt;li>&lt;a href="http://blog.smartbear.com/iot-2/testing-challenges-associated-with-machine-learning-apis" class="external-link">Testing Challenges Associated with Machine Learning APIs&lt;/a> &amp;mdash; John Mueller&lt;/li>
&lt;/ul></description></item><item><title>How to watch SWF in Linux</title><link>https://www.aviskase.com/articles/2015/12/23/how-to-watch-swf-in-linux/</link><pubDate>Wed, 23 Dec 2015 00:00:00 +0000</pubDate><guid>https://www.aviskase.com/articles/2015/12/23/how-to-watch-swf-in-linux/</guid><description>&lt;p>Sometimes people use Jing to record videos for bug reports. This pest is saving them as SWF file. So, here is a simple note on how to open these videos in Linux.&lt;/p>
&lt;p>It&amp;rsquo;s really easy. Firefox can open them (of course, if Shockwave plugin is present). Just download that nasty video and open it in FF, all&amp;rsquo;s done.&lt;/p></description></item></channel></rss>